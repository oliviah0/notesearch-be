{"what": ["What are React hooks?", "What is an action creator?", "What is the call stack?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are trees used for?", "What are the differences between an async function and a regular function?", "What are differences between ``display: inline`` and ``display: block``?", "What does the `mapStateToProps` function do?", "What is the difference between a tree and a graph?", "What are some differences between arrow functions and the function keyword?", "What is a port?", "What is the session object in Flask?", "What is the purpose of the React Router?", "What is an uncontrolled component?", "What is a stack? Where and how are they used?", "What is a mock? What are some things you would mock?", "What is middleware?", "What is a queue? Where and how are they used?", "What is time complexity?", "What is a controlled component?", "What is PostgreSQL?", "What is a reducer?", "What is the purpose of the Bcrypt module?", "What is the difference between Component and PureComponent?", "What is a Promise?", "What is the difference between an `INNER` and `OUTER` join?", "What is the difference between authorization and authentication?", "What are some differences between `var` and `let`?", "What are some differences between Web Sockets and HTTP?", "What are some differences between client side and server side routing?", "What are propTypes?", "What is the difference between SQL and PostgreSQL?", "What is continuous integration?", "What are important differences between Python and JavaScript?", "What is JSX?", "What is an API?", "What is the purpose of `componentWillUnmount`?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What are some ways of managing asynchronous code in JavaScript?", "What is the purpose of a `salt` when hashing a password?", "What does the `bind` function do?", "What is an HTTP header?", "What is an HTTP Response Code?", "What is jQuery?", "What are three features of the Redux developer tool in Chrome?", "What is an instance?", "What is an ORM? What do they do?", "What is a single page application?", "What is Big O Notation?", "What is the error-first callback pattern?", "What is React? When and why would you use it?", "What are some differences between arrays and objects?", "What is the purpose of the rest operator?", "What is an action?", "What is the difference between a static method and an instance method?", "What is Redux? Why would you use it?", "What are some advantages to using a CSS framework like Twitter Bootstrap?", "What is a React `ref` and when might you use them?", "What is a jQuery object?", "What is the role of web application framework, like Flask?", "What is the difference between a binary search tree and binary tree?", "What is the difference between GET and POST?", "What is the purpose of the `<Provider>` component?", "What is the purpose of `form.hidden_tag()`?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?", "What is RESTful routing?", "What is an environment variable and what are they used for?", "What is redux-thunk and why would you use it?", "What are some differences between `let` and `const`?", "What are linked lists used for?", "What are two ways of handling redirects with React Router? When would you use each?", "What is the purpose of the `key` prop when rendering a list of components?", "What is the difference between Node.js and Express.js?", "What is Babel?", "What is DNS?", "What does the `next` function do?", "What is AJAX? Why would you use it?", "What is an adjacency list?", "What exactly does Flask's `jsonify()` do?", "What is Big O notation and why does it matter?", "What is a cookie and what kinds of things are they commonly used for?", "What is CORS? How does it work?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is a hostname?", "What are some ways to decide which code to test?", "What is one way encryption?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is the difference between time and space complexity?", "What is Object Oriented Programming?", "What is a resource?", "What is the keyword `this`?", "What are some limitations of AJAX request?", "What is the purpose of the `connect` function? What does it return?", "What is a JWT?", "What happens if two values hash to the same index?", "What is the signature portion of the JWT?  What does it do?", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What is the purpose of the spread operator?", "What is an integration test?", "What is the difference between PUT and PATCH?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is a stateless functional component?", "What is a store?", "What are graphs used for?", "What is the `event` object? What kinds of things are in it?", "What is a unit test?", "What are some difference between state and props?", "What are two different ways to handle page-not-found user experiences using React Router?", "What is the value of using JSONSchema for validation?", "What in React makes the `render` function run?", "What is the difference between `HAVING` and `WHERE`?", "What does the `mapDispatchToProps` function do?", "What is an IP address?", "What is JSON?", "What is TDD? What are some benefits and drawbacks?", "What is a class? When would you make one?", "What is the component life cycle?", "What is event delegation? Why would you use it?", "What does `RETURNING` do in SQL? When would you use it?", "What are some advantages/disadvantages to using Linked Lists versus arrays?", "What is Webpack?", "What is the Same Origin Policy?", "What is a heap? What are they good for?", "What is CSRF? What is the purpose of the CSRF token?"], "big": ["What is Big O Notation?", "What is Big O notation and why does it matter?", "What is time complexity?"], "o": ["What is Big O Notation?", "What is Big O notation and why does it matter?", "What is time complexity?", "What are some advantages/disadvantages to using Linked Lists versus arrays?"], "notation": ["What is Big O Notation?", "What is Big O notation and why does it matter?", "What is time complexity?", "What are some differences between arrays and objects?"], "matter": ["What is Big O notation and why does it matter?", "What does idempotent mean? Which HTTP verbs are idempotent?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "way": ["What are some ways to decide which code to test?", "What is a JWT?", "What are some difference between state and props?", "What is one way encryption?", "How does data flow in a React/Redux application?", "What is a React `ref` and when might you use them?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "You can pass information to Flask either as a parameter in a route URL", "What are some differences between client side and server side routing?", "What is a stateless functional component?", "What are React hooks?", "What are two different ways to handle page-not-found user experiences using React Router?", "What is an adjacency list?", "What is Redux? Why would you use it?", "What is Big O notation and why does it matter?", "What are some ways of managing asynchronous code in JavaScript?", "What is the purpose of a `salt` when hashing a password?"], "measure": ["What is Big O Notation?", "What is Big O notation and why does it matter?", "What is time complexity?"], "performance": ["What is Big O notation and why does it matter?", "What is Webpack?", "What is the purpose of the `key` prop when rendering a list of components?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "characteristics": ["What is Big O notation and why does it matter?"], "algorithm": ["What is Big O notation and why does it matter?", "What is time complexity?"], "input": ["What is the purpose of `form.hidden_tag()`?", "What is one way encryption?", "What is time complexity?", "What is a controlled component?", "What is Big O Notation?", "What is Big O notation and why does it matter?"], "grows": ["What is Big O notation and why does it matter?", "What is time complexity?", "What is Object Oriented Programming?"], "time": ["What is TDD? What are some benefits and drawbacks?", "What are some differences between Web Sockets and HTTP?", "Compare and contrast unit, integration and end-to-end tests.", "What are some differences between client side and server side routing?", "What is the difference between time and space complexity?", "What is time complexity?", "What in React makes the `render` function run?", "What does the `mapStateToProps` function do?", "What is Big O Notation?", "What is a Promise?", "What is the purpose of a `salt` when hashing a password?"], "complexity": ["What are some ways to decide which code to test?", "What is time complexity?", "What is the difference between time and space complexity?", "What is Object Oriented Programming?"], "an": ["What is an action creator?", "What is time complexity?", "What is an adjacency list?", "What is an environment variable and what are they used for?", "What is an action?", "What is an uncontrolled component?", "What is an instance?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What is an API?", "What are the differences between an async function and a regular function?", "What is an integration test?"], "'s": ["What is time complexity?", "What is a class? When would you make one?", "What is a controlled component?", "What does the `mapStateToProps` function do?", "What exactly does Flask's `jsonify()` do?", "What is a unit test?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "runtime": ["What is time complexity?"], "typically": ["What are some differences between arrays and objects?", "What is time complexity?", "What is an environment variable and what are they used for?", "When would you use `componentDidUpdate`?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "When would you use `componentDidMount`?"], "measured": ["What is the difference between time and space complexity?", "What is time complexity?"], "differences": ["What are some differences between arrow functions and the function keyword?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What are some differences between `var` and `let`?", "What are some differences between arrays and objects?", "What are some differences between Web Sockets and HTTP?", "What are two ways of handling redirects with React Router? When would you use each?", "What are some differences between client side and server side routing?", "What are important differences between Python and JavaScript?", "What are the differences between an async function and a regular function?", "What are some differences between `let` and `const`?", "What are differences between ``display: inline`` and ``display: block``?"], "arrays": ["Explain how hash tables work", "What are some advantages/disadvantages to using Linked Lists versus arrays?", "What are some differences between arrays and objects?"], "objects": ["What is an ORM? What do they do?", "What are some differences between arrays and objects?", "What is JSON?", "What is redux-thunk and why would you use it?"], "some": ["What are two ways of handling redirects with React Router? When would you use each?", "What are some differences between arrays and objects?"], "include": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is TDD? What are some benefits and drawbacks?", "What are some differences between arrays and objects?"], "numerical": ["What are some differences between arrays and objects?"], "keys": ["What does the `mapStateToProps` function do?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What are some differences between arrays and objects?", "What does the `mapDispatchToProps` function do?"], "object": ["What is the difference between PUT and PATCH?", "What are some differences between arrays and objects?", "What does the `mapDispatchToProps` function do?", "What is a jQuery object?", "You can pass information to Flask either as a parameter in a route URL", "What does the `mapStateToProps` function do?", "What is the session object in Flask?", "What is an action?", "What is an instance?", "What is Object Oriented Programming?", "What is an adjacency list?", "What is an ORM? What do they do?", "What is the `event` object? What kinds of things are in it?", "What is a resource?", "What is JSON?"], "strings": ["What are some differences between arrays and objects?", "What is JSON?"], "because": ["What are some differences between arrays and objects?"], "natural": ["What are some differences between arrays and objects?"], "ordering": ["What are some differences between arrays and objects?"], "when": ["What does the `bind` function do?", "What is React? When and why would you use it?", "What is the Same Origin Policy?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What are some difference between state and props?", "When might you not use jQuery?", "What are some differences between arrays and objects?", "What are two ways of handling redirects with React Router? When would you use each?", "Explain how hash tables work", "What is a class? When would you make one?", "What is an action?", "What is DNS?", "When would you use `componentDidUpdate`?", "What does `RETURNING` do in SQL? When would you use it?", "How does data flow in a React/Redux application?", "When would you use `componentDidMount`?", "What are some ways of managing asynchronous code in JavaScript?"], "loop": ["What are some differences between arrays and objects?"], "array": ["What are some differences between arrays and objects?", "What is the purpose of the rest operator?", "What is the difference between a static method and an instance method?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What is the purpose of the spread operator?"], "traverse": ["What are some differences between arrays and objects?"], "first": ["What does the `bind` function do?", "What is the error-first callback pattern?", "What is a queue? Where and how are they used?", "What is TDD? What are some benefits and drawbacks?", "What are some differences between arrays and objects?", "What is the call stack?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is DNS?", "What in React makes the `render` function run?", "What is the purpose of the `connect` function? What does it return?"], "index": ["Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What happens if two values hash to the same index?", "What are some differences between arrays and objects?"], "last": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some differences between arrays and objects?", "What is the call stack?", "What are some differences between client side and server side routing?", "What is the purpose of `componentWillUnmount`?", "What does the `mapStateToProps` function do?"], "rules": ["What are some differences between arrays and objects?"], "iteration": ["What are some differences between arrays and objects?", "What is continuous integration?"], "complicated": ["What are some differences between arrays and objects?"], "different": ["What is a port?", "What are some differences between arrays and objects?", "What is a class? When would you make one?", "What is the session object in Flask?", "What is the purpose of the React Router?", "What are two different ways to handle page-not-found user experiences using React Router?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are important differences between Python and JavaScript?", "What is the value of using JSONSchema for validation?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What is an ORM? What do they do?", "What is the difference between Component and PureComponent?", "What are some limitations of AJAX request?"], "built-in": ["What are some differences between arrays and objects?"], "methods": ["What are some differences between arrays and objects?", "What is a jQuery object?", "What is the difference between a static method and an instance method?", "What is the component life cycle?", "What is an API?", "What is a resource?"], "e.g": ["What is a class? When would you make one?", "What are some differences between arrays and objects?"], "map": ["What are some differences between arrays and objects?", "What is an API?", "What is the purpose of the `connect` function? What does it return?"], "n't": ["If a JWT is intercepted, can the attacker see what's inside the payload?", "What are some differences between arrow functions and the function keyword?", "What is the Same Origin Policy?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "When might you not use jQuery?", "What are some differences between arrays and objects?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some differences between client side and server side routing?", "You can pass information to Flask either as a parameter in a route URL", "What are two ways of handling redirects with React Router? When would you use each?", "What is the session object in Flask?", "What is an environment variable and what are they used for?", "What are important differences between Python and JavaScript?", "What is JSX?", "What are some limitations of AJAX request?", "What is the difference between an `INNER` and `OUTER` join?"], "you": ["What are two ways of handling redirects with React Router? When would you use each?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is Redux? Why would you use it?", "What are some differences between arrays and objects?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "How do you collect data from the body of the request using Flask?", "You can pass information to Flask either as a parameter in a route URL", "How do you collect data from a URL parameter using Flask?", "What is the difference between a static method and an instance method?", "What is the difference between GET and POST?", "What is the purpose of the Bcrypt module?", "What is the `event` object? What kinds of things are in it?", "What are some limitations of AJAX request?", "What is a mock? What are some things you would mock?"], "access": ["What is the difference between authorization and authentication?", "What is a port?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some differences between arrays and objects?", "What is Redux? Why would you use it?", "What is an environment variable and what are they used for?", "What is DNS?", "What is the `event` object? What kinds of things are in it?", "How does data flow in a React/Redux application?"], "using": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "How do you collect data from a URL parameter using Flask?", "What is the difference between Node.js and Express.js?", "What are two different ways to handle page-not-found user experiences using React Router?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What is the value of using JSONSchema for validation?", "What is AJAX? Why would you use it?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What are some differences between arrays and objects?", "What is the session object in Flask?", "What is the difference between a static method and an instance method?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is JSON?", "What are some advantages to using a CSS framework like Twitter Bootstrap?", "How do you collect data from the query string using Flask?", "How do you collect data from the body of the request using Flask?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What are some advantages/disadvantages to using Linked Lists versus arrays?", "What is a stateless functional component?", "You can pass information to Flask either as a parameter in a route URL", "What is RESTful routing?", "What are some ways of managing asynchronous code in JavaScript?"], "dot": ["What are some differences between arrays and objects?"], "bracket": ["What are some differences between arrays and objects?"], "value": ["What does the `bind` function do?", "Explain how hash tables work", "What happens if two values hash to the same index?", "What are some differences between arrays and objects?", "What is the purpose of the rest operator?", "What is a jQuery object?", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What is the value of using JSONSchema for validation?", "What is a cookie and what kinds of things are they commonly used for?", "What is a Promise?", "What are some ways of managing asynchronous code in JavaScript?", "What is the keyword `this`?"], "use": ["What are two ways of handling redirects with React Router? When would you use each?", "How do you collect data from a URL parameter using Flask?", "What is jQuery?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "When would you use `componentDidUpdate`?", "What is AJAX? Why would you use it?", "What are the differences between an async function and a regular function?", "What is a cookie and what kinds of things are they commonly used for?", "What is React? When and why would you use it?", "In the Hack or Snooze API project, what did we use async/await for?", "What are some differences between arrays and objects?", "What is an uncontrolled component?", "What is Object Oriented Programming?", "What is Redux? Why would you use it?", "When would you use `componentDidMount`?", "What is middleware?", "When might you not use jQuery?", "What is a React `ref` and when might you use them?", "Compare and contrast unit, integration and end-to-end tests.", "What is a controlled component?", "What is event delegation? Why would you use it?", "What does `RETURNING` do in SQL? When would you use it?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "You can pass information to Flask either as a parameter in a route URL", "What is RESTful routing?", "What is an environment variable and what are they used for?", "What is redux-thunk and why would you use it?", "What is an API?", "What are some ways of managing asynchronous code in JavaScript?"], "var": ["What are some differences between `var` and `let`?"], "let": ["In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What are some differences between `var` and `let`?", "What are some differences between `let` and `const`?"], "variables": ["What are some differences between `var` and `let`?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is an environment variable and what are they used for?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are some differences between `let` and `const`?"], "declared": ["What are some ways of managing asynchronous code in JavaScript?", "What are some differences between `var` and `let`?"], "scoped": ["What are some differences between `var` and `let`?"], "nearest": ["What are some differences between `var` and `let`?"], "function": ["What does the `bind` function do?", "Explain how hash tables work", "What is an action creator?", "How do you collect data from a URL parameter using Flask?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What does the `next` function do?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What are the differences between an async function and a regular function?", "What in React makes the `render` function run?", "What does the `mapStateToProps` function do?", "What is Big O Notation?", "What are some differences between arrow functions and the function keyword?", "What is the purpose of the rest operator?", "What does the `mapDispatchToProps` function do?", "What is an action?", "What is a stack? Where and how are they used?", "What is the keyword `this`?", "What is a mock? What are some things you would mock?", "What is the purpose of the `connect` function? What does it return?", "What is a reducer?", "What is the purpose of the Bcrypt module?", "What is the purpose of the spread operator?", "What is an integration test?", "What are some differences between `var` and `let`?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is redux-thunk and why would you use it?", "What is a unit test?", "What are some ways of managing asynchronous code in JavaScript?"], "block": ["What are differences between ``display: inline`` and ``display: block``?", "What are some differences between `var` and `let`?"], "redeclare": ["What are some differences between `var` and `let`?"], "const": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What are some differences between `let` and `const`?"], "reassigned": ["What are some differences between `let` and `const`?"], "arrow": ["What are some differences between arrow functions and the function keyword?"], "functions": ["What does the `bind` function do?", "What are some differences between arrow functions and the function keyword?", "In the Hack or Snooze API project, what did we use async/await for?", "What is the call stack?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What does the `mapDispatchToProps` function do?", "What is the role of web application framework, like Flask?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What is Redux? Why would you use it?", "What is a unit test?", "What are some ways of managing asynchronous code in JavaScript?", "What is a mock? What are some things you would mock?", "What is middleware?"], "keyword": ["What does the `bind` function do?", "What are some differences between arrow functions and the function keyword?", "In the Hack or Snooze API project, what did we use async/await for?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What is an instance?", "What is the keyword `this`?"], "shorter": ["What are some differences between arrow functions and the function keyword?"], "syntax": ["What are important differences between Python and JavaScript?", "What are some differences between arrow functions and the function keyword?"], "implicit": ["What are some differences between arrow functions and the function keyword?"], "return": ["What does the `bind` function do?", "What are some differences between arrow functions and the function keyword?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What does the `mapDispatchToProps` function do?", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What are important differences between Python and JavaScript?", "What does `RETURNING` do in SQL? When would you use it?", "What are the differences between an async function and a regular function?", "What is the purpose of the `connect` function? What does it return?"], "body": ["What does the `bind` function do?", "What are some differences between arrow functions and the function keyword?", "How do you collect data from the body of the request using Flask?", "What is the purpose of the rest operator?", "What is the difference between GET and POST?"], "single": ["What is React? When and why would you use it?", "What are some differences between arrow functions and the function keyword?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is Webpack?", "What is a single page application?"], "expression": ["What are some differences between arrow functions and the function keyword?", "What happens if you forget the `await` keyword in front of an asynchronous expression?"], "get": ["What does the `bind` function do?", "What are some differences between arrow functions and the function keyword?", "What is TDD? What are some benefits and drawbacks?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "How do you collect data from the body of the request using Flask?", "What are some differences between client side and server side routing?", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What does `RETURNING` do in SQL? When would you use it?", "What is the value of using JSONSchema for validation?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the difference between GET and POST?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "arguments": ["What does the `bind` function do?", "What are some differences between arrow functions and the function keyword?", "What is the purpose of the rest operator?", "What is the difference between GET and POST?", "What is the purpose of the spread operator?"], "purpose": ["What is the purpose of `form.hidden_tag()`?", "What is the purpose of a `salt` when hashing a password?", "What is the purpose of the `key` prop when rendering a list of components?", "What is the purpose of the rest operator?", "What is the purpose of the `connect` function? What does it return?", "What does the `mapDispatchToProps` function do?", "What is the purpose of the React Router?", "What is the purpose of the Bcrypt module?", "What is the purpose of `componentWillUnmount`?", "What is Redux? Why would you use it?", "What is CSRF? What is the purpose of the CSRF token?", "What is the purpose of the spread operator?", "What is the purpose of the `<Provider>` component?"], "rest": ["What is the purpose of the spread operator?", "What is RESTful routing?", "What is a unit test?", "What is the purpose of the rest operator?"], "operator": ["What is the purpose of the spread operator?", "What is the purpose of the rest operator?"], "the": ["What does the `bind` function do?", "What are some difference between state and props?", "What is the call stack?", "What is an HTTP Response Code?", "What is DNS?", "What does the `next` function do?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What is CORS? How does it work?", "What is a hostname?", "What is the purpose of the rest operator?", "What does the `mapDispatchToProps` function do?", "What is the session object in Flask?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a resource?", "What is the keyword `this`?", "What is the purpose of the `connect` function? What does it return?", "What is a JWT?", "What is TDD? What are some benefits and drawbacks?", "When might you not use jQuery?", "What is the signature portion of the JWT?  What does it do?", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What is the purpose of the Bcrypt module?", "What is the purpose of the spread operator?", "If a JWT is intercepted, can the attacker see what's inside the payload?", "What is the purpose of the `<Provider>` component?", "What is the Same Origin Policy?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is the `event` object? What kinds of things are in it?", "What is CSRF? What is the purpose of the CSRF token?", "What are some ways of managing asynchronous code in JavaScript?"], "collects": ["What is the purpose of the rest operator?"], "remaining": ["What is the purpose of the rest operator?"], "puts": ["What is the purpose of the rest operator?"], "inside": ["If a JWT is intercepted, can the attacker see what's inside the payload?", "In the Hack or Snooze API project, what did we use async/await for?", "What is the purpose of the rest operator?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "What is event delegation? Why would you use it?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the keyword `this`?"], "for": ["What does the `bind` function do?", "What is an HTTP Response Code?", "What is the value of using JSONSchema for validation?", "What is an ORM? What do they do?", "How does data flow in a React/Redux application?", "What are some ways to decide which code to test?", "What is the purpose of the rest operator?", "What is an IP address?", "What is Redux? Why would you use it?", "What is a class? When would you make one?", "What is a controlled component?", "What is event delegation? Why would you use it?", "What is the purpose of the spread operator?", "What is the difference between an `INNER` and `OUTER` join?", "What is the difference between authorization and authentication?", "What are some differences between Web Sockets and HTTP?", "You can pass information to Flask either as a parameter in a route URL", "What is RESTful routing?", "What are important differences between Python and JavaScript?", "What is an API?", "What is CSRF? What is the purpose of the CSRF token?"], "example": ["What does the `bind` function do?", "How do you collect data from a URL parameter using Flask?", "What is an HTTP Response Code?", "What is the value of using JSONSchema for validation?", "What is an ORM? What do they do?", "How does data flow in a React/Redux application?", "What are some ways to decide which code to test?", "What is a port?", "What is the purpose of the rest operator?", "What is an IP address?", "What is Redux? Why would you use it?", "What is a class? When would you make one?", "What is a controlled component?", "What is event delegation? Why would you use it?", "What is the purpose of the spread operator?", "What is the difference between an `INNER` and `OUTER` join?", "What is the difference between authorization and authentication?", "What are some differences between Web Sockets and HTTP?", "You can pass information to Flask either as a parameter in a route URL", "What is RESTful routing?", "What are important differences between Python and JavaScript?", "What is an API?", "What is CSRF? What is the purpose of the CSRF token?"], "``": ["What does the `bind` function do?", "How do you collect data from the query string using Flask?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What is the purpose of the rest operator?", "How do you collect data from the body of the request using Flask?", "What is a jQuery object?", "How do you collect data from a URL parameter using Flask?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is the component life cycle?", "What is event delegation? Why would you use it?", "What is the purpose of `componentWillUnmount`?", "What are differences between ``display: inline`` and ``display: block``?", "What is a cookie and what kinds of things are they commonly used for?", "What is a mock? What are some things you would mock?"], "somefn": ["What is the purpose of the rest operator?"], "b": ["What does the `bind` function do?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What is the purpose of the rest operator?"], "...": ["What is the purpose of the spread operator?", "What is the purpose of the rest operator?"], "others": ["What are some ways to decide which code to test?", "What is the purpose of the rest operator?"], "//": ["What does the `bind` function do?", "What is the purpose of the rest operator?"], "stuff": ["What does the `bind` function do?", "What is the purpose of the rest operator?"], "call": ["What does the `bind` function do?", "What is the call stack?", "What is the purpose of the rest operator?", "What is a stack? Where and how are they used?", "What is the purpose of the Bcrypt module?", "What are some limitations of AJAX request?"], "1": ["What does the `bind` function do?", "What is the purpose of the rest operator?", "What are some advantages/disadvantages to using Linked Lists versus arrays?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What is Redux? Why would you use it?", "What is the purpose of the spread operator?"], "2": ["What is the purpose of the spread operator?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What is the purpose of the rest operator?"], "3": ["What is a class? When would you make one?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What is the purpose of the rest operator?"], "4": ["What is the purpose of the spread operator?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What is the purpose of the rest operator?"], "5": ["What is Redux? Why would you use it?", "What is the purpose of the spread operator?", "What is the purpose of the rest operator?"], "scope": ["What is the purpose of the rest operator?"], "variable": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "How do you collect data from a URL parameter using Flask?", "What is an environment variable and what are they used for?", "What is the purpose of the rest operator?"], "called": ["Explain how hash tables work", "What is CORS? How does it work?", "What is the purpose of the rest operator?", "What are some differences between client side and server side routing?", "What is the difference between a static method and an instance method?", "What are important differences between Python and JavaScript?", "What in React makes the `render` function run?", "How can you implement authentication with a JWT?  Describe how it works at a high level."], "whose": ["What is DNS?", "What is the purpose of the rest operator?"], "spread": ["What is the purpose of the spread operator?"], "spreads": ["What is the purpose of the spread operator?"], "math.max": ["What is the purpose of the spread operator?"], "accepts": ["What is the purpose of the spread operator?", "What is a reducer?"], "unlimited": ["What is the purpose of the spread operator?"], "number": ["What is Webpack?", "What is the purpose of the spread operator?", "What is the purpose of a `salt` when hashing a password?"], "if": ["If a JWT is intercepted, can the attacker see what's inside the payload?", "What is CSRF? What is the purpose of the CSRF token?", "What is a JWT?", "What is a port?", "When might you not use jQuery?", "What is the purpose of a `salt` when hashing a password?", "What are some ways to decide which code to test?", "What are propTypes?", "What is DNS?", "How does data flow in a React application?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What does the `mapStateToProps` function do?", "What is the purpose of the spread operator?", "What is a resource?", "What are some ways of managing asynchronous code in JavaScript?", "What are some limitations of AJAX request?"], "want": ["What are two ways of handling redirects with React Router? When would you use each?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "What is event delegation? Why would you use it?", "What does `RETURNING` do in SQL? When would you use it?", "What is the purpose of the spread operator?"], "pass": ["What is TDD? What are some benefits and drawbacks?", "What are some difference between state and props?", "You can pass information to Flask either as a parameter in a route URL", "What is continuous integration?", "What is Redux? Why would you use it?", "What is the purpose of the spread operator?"], "8": ["What is the purpose of the spread operator?"], "6": ["What is the purpose of the spread operator?"], "tl": ["What is the purpose of the spread operator?"], "dr": ["What is the purpose of the spread operator?"], "pulls": ["What is the purpose of the spread operator?"], "extracts": ["What is the purpose of the spread operator?"], "elements": ["What are differences between ``display: inline`` and ``display: block``?", "What is event delegation? Why would you use it?", "What is the purpose of the spread operator?", "What is jQuery?"], "passes": ["What is the purpose of the spread operator?"], "oriented": ["What is an ORM? What do they do?", "What is Object Oriented Programming?"], "programming": ["What is Object Oriented Programming?"], "paradigm": ["What is Object Oriented Programming?"], "classes": ["What is the role of web application framework, like Flask?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is a stateless functional component?", "What is Object Oriented Programming?"], "instances": ["What is an instance?", "What is a class? When would you make one?", "What is Object Oriented Programming?", "What is the difference between a static method and an instance method?"], "manage": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is a store?", "What is a stack? Where and how are they used?", "What is Object Oriented Programming?", "What are some ways of managing asynchronous code in JavaScript?", "What are some limitations of AJAX request?"], "data": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is the call stack?", "What is an HTTP header?", "How do you collect data from a URL parameter using Flask?", "What is an instance?", "What is AJAX? Why would you use it?", "What is an ORM? What do they do?", "What exactly does Flask's `jsonify()` do?", "How does data flow in a React/Redux application?", "What is the difference between a tree and a graph?", "What is the difference between `HAVING` and `WHERE`?", "What is the session object in Flask?", "What is a stack? Where and how are they used?", "What is Object Oriented Programming?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a resource?", "What are some limitations of AJAX request?", "What is JSON?", "What is a queue? Where and how are they used?", "How do you collect data from the query string using Flask?", "How do you collect data from the body of the request using Flask?", "What is a class? When would you make one?", "What is the signature portion of the JWT?  What does it do?", "What does `RETURNING` do in SQL? When would you use it?", "What is the difference between GET and POST?", "If a JWT is intercepted, can the attacker see what's inside the payload?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?", "What is the difference between SQL and PostgreSQL?", "How does data flow in a React application?", "What are important differences between Python and JavaScript?", "What are graphs used for?", "What are linked lists used for?"], "functionality": ["What is a unit test?", "What is a class? When would you make one?", "What is an integration test?", "What is Object Oriented Programming?"], "application": ["What are some ways to decide which code to test?", "What is Redux? Why would you use it?", "When might you not use jQuery?", "You can pass information to Flask either as a parameter in a route URL", "What is the role of web application framework, like Flask?", "What is an environment variable and what are they used for?", "How does data flow in a React application?", "What is Object Oriented Programming?", "What is an API?", "What is a single page application?", "How does data flow in a React/Redux application?"], "by": ["What is Object Oriented Programming?"], "encapsulating": ["What is Object Oriented Programming?"], "creating": ["What are two ways of handling redirects with React Router? When would you use each?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is RESTful routing?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What is Object Oriented Programming?"], "easier": ["What is Object Oriented Programming?"], "class": ["How is a Component created in React?", "What is a class? When would you make one?", "What is the difference between a static method and an instance method?", "What is an instance?", "What does `RETURNING` do in SQL? When would you use it?", "What is the keyword `this`?"], "would": ["What are two ways of handling redirects with React Router? When would you use each?", "What is the purpose of the `key` prop when rendering a list of components?", "When would you use `componentDidUpdate`?", "What is the value of using JSONSchema for validation?", "What is AJAX? Why would you use it?", "What is React? When and why would you use it?", "What are some ways to decide which code to test?", "What is a port?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is an IP address?", "What is Redux? Why would you use it?", "When would you use `componentDidMount`?", "What is a mock? What are some things you would mock?", "What is a class? When would you make one?", "What is event delegation? Why would you use it?", "What does `RETURNING` do in SQL? When would you use it?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "You can pass information to Flask either as a parameter in a route URL", "What is RESTful routing?", "What is redux-thunk and why would you use it?", "What is CSRF? What is the purpose of the CSRF token?"], "make": ["What is React? When and why would you use it?", "What is the Same Origin Policy?", "What is the difference between authorization and authentication?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is a class? When would you make one?", "What is the difference between a static method and an instance method?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "What are important differences between Python and JavaScript?", "What is AJAX? Why would you use it?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is CSRF? What is the purpose of the CSRF token?", "What is an integration test?", "What are some limitations of AJAX request?"], "one": ["What is an HTTP Response Code?", "What are two different ways to handle page-not-found user experiences using React Router?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are some ways to decide which code to test?", "What is one way encryption?", "What is the session object in Flask?", "What is a unit test?", "What is an uncontrolled component?", "What is the purpose of the React Router?", "What are some limitations of AJAX request?", "What are some advantages to using a CSS framework like Twitter Bootstrap?", "What is a class? When would you make one?", "What is a controlled component?", "What is event delegation? Why would you use it?", "What is the purpose of the Bcrypt module?", "What is a Promise?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "You can pass information to Flask either as a parameter in a route URL", "What is the `event` object? What kinds of things are in it?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What are some ways of managing asynchronous code in JavaScript?", "What is the purpose of a `salt` when hashing a password?"], "a": ["Explain how hash tables work", "What are React hooks?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "What is a cookie and what kinds of things are they commonly used for?", "What is the error-first callback pattern?", "How is a Component created in React?", "What is a resource?", "What is a mock? What are some things you would mock?", "What happens if two values hash to the same index?", "What is a jQuery object?", "What is a class? When would you make one?", "What is a controlled component?", "What is the component life cycle?", "What is a reducer?", "What is the difference between GET and POST?", "What is a Promise?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?", "What is a store?", "What is a unit test?", "What is the purpose of a `salt` when hashing a password?"], "like": ["What does the `bind` function do?", "What is the call stack?", "What is DNS?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What is the value of using JSONSchema for validation?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is an action?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a mock? What are some things you would mock?", "What is JSON?", "What are some advantages to using a CSS framework like Twitter Bootstrap?", "What is a React `ref` and when might you use them?", "What is a class? When would you make one?", "What is the role of web application framework, like Flask?", "What is the purpose of `form.hidden_tag()`?", "What are some differences between client side and server side routing?", "You can pass information to Flask either as a parameter in a route URL", "What is RESTful routing?", "What is an environment variable and what are they used for?", "What is redux-thunk and why would you use it?", "What is JSX?"], "blueprint": ["What is a class? When would you make one?"], "used": ["When would you use `componentDidUpdate`?", "What are trees used for?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What is an ORM? What do they do?", "What is a cookie and what kinds of things are they commonly used for?", "What are some ways to decide which code to test?", "In the Hack or Snooze API project, what did we use async/await for?", "What is a stack? Where and how are they used?", "What is Redux? Why would you use it?", "What are some advantages to using a CSS framework like Twitter Bootstrap?", "What is a queue? Where and how are they used?", "When might you not use jQuery?", "What is a class? When would you make one?", "What is the signature portion of the JWT?  What does it do?", "What is the purpose of `form.hidden_tag()`?", "What is the difference between SQL and PostgreSQL?", "What is an environment variable and what are they used for?", "What are graphs used for?", "What are linked lists used for?"], "create": ["When might you not use jQuery?", "What is a stateless functional component?", "What is a class? When would you make one?", "What is the signature portion of the JWT?  What does it do?", "What is the session object in Flask?", "What is the difference between a static method and an instance method?", "What is an instance?", "How can you implement authentication with a JWT?  Describe how it works at a high level."], "it": ["What does the `bind` function do?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is the purpose of the `key` prop when rendering a list of components?", "What is Babel?", "What is a single page application?", "What is a cookie and what kinds of things are they commonly used for?", "What is CORS? How does it work?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is an IP address?", "What is the session object in Flask?", "What is the purpose of the React Router?", "What is an uncontrolled component?", "What is Redux? Why would you use it?", "What is JSON?", "What is a JWT?", "What is a jQuery object?", "What is a class? When would you make one?", "What is the role of web application framework, like Flask?", "What is the component life cycle?", "What is Webpack?", "If a JWT is intercepted, can the attacker see what's inside the payload?", "What is the purpose of the `<Provider>` component?", "What is redux-thunk and why would you use it?", "What is JSX?"], "helpful": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is a class? When would you make one?"], "know": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is a class? When would you make one?", "What is React? When and why would you use it?"], "need": ["How does data flow in a React/Redux application?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is a class? When would you make one?", "What is an environment variable and what are they used for?", "What is the difference between a static method and an instance method?", "What is an uncontrolled component?", "What is Redux? Why would you use it?", "What are some ways of managing asynchronous code in JavaScript?", "What are some limitations of AJAX request?"], "share": ["What are differences between ``display: inline`` and ``display: block``?", "What is a class? When would you make one?"], "individual": ["What is a class? When would you make one?", "What is the difference between `HAVING` and `WHERE`?"], "could": ["What is CSRF? What is the purpose of the CSRF token?", "In the Hack or Snooze API project, what did we use async/await for?", "What are two ways of handling redirects with React Router? When would you use each?", "When might you not use jQuery?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is the purpose of the `key` prop when rendering a list of components?", "What is an IP address?", "What is a class? When would you make one?", "What is a controlled component?", "What are two different ways to handle page-not-found user experiences using React Router?", "What does `RETURNING` do in SQL? When would you use it?", "What is an API?", "What is a unit test?", "What is an integration test?", "What are some limitations of AJAX request?"], "triangle": ["What is a class? When would you make one?"], "differ": ["What is a class? When would you make one?"], "lengths": ["What is a class? When would you make one?"], "sides": ["What is a class? When would you make one?"], "triangles": ["What is a class? When would you make one?"], "able": ["What does the `mapDispatchToProps` function do?", "What is a class? When would you make one?", "What is the purpose of the `key` prop when rendering a list of components?"], "similar": ["What is a heap? What are they good for?", "What is a class? When would you make one?", "What is the difference between a binary search tree and binary tree?", "What is a resource?", "How does data flow in a React/Redux application?"], "things": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is a class? When would you make one?", "What is the session object in Flask?", "What is an environment variable and what are they used for?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What are graphs used for?", "What is the `event` object? What kinds of things are in it?", "What is a cookie and what kinds of things are they commonly used for?", "What is a mock? What are some things you would mock?"], "calculate": ["What is a class? When would you make one?"], "area": ["What are some ways to decide which code to test?", "What is a class? When would you make one?"], "perimeter": ["What is a class? When would you make one?"], "instance": ["What does the `bind` function do?", "What is the difference between a static method and an instance method?", "What is an instance?", "What does `RETURNING` do in SQL? When would you use it?", "What is the keyword `this`?"], "created": ["What is an instance?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "How is a Component created in React?"], "in": ["In the Hack or Snooze API project, what did we use async/await for?", "What is a port?", "How does data flow in a React/Redux application?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?", "What is a heap? What are they good for?", "What is the purpose of the React Router?", "What is an instance?", "In `psql`, how do you connect to a database?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What is Redux? Why would you use it?", "What are some ways of managing asynchronous code in JavaScript?"], "javascript": ["What is an instance?", "What are important differences between Python and JavaScript?", "What is AJAX? Why would you use it?", "What are some ways of managing asynchronous code in JavaScript?", "What is the keyword `this`?", "What is JSON?"], "invoking": ["What is an instance?"], "new": ["What does the `bind` function do?", "Explain how hash tables work", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What happens if two values hash to the same index?", "What is the purpose of the React Router?", "What is an instance?", "What does `RETURNING` do in SQL? When would you use it?", "What is a reducer?", "What does the `mapStateToProps` function do?", "What is a single page application?", "What is the difference between Component and PureComponent?"], "passing": ["What is an instance?"], "needed": ["What is an instance?", "What is the purpose of the `<Provider>` component?"], "specific": ["What is the Same Origin Policy?", "What is the purpose of a `salt` when hashing a password?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is a jQuery object?", "What is an instance?", "What is the value of using JSONSchema for validation?", "What are some limitations of AJAX request?"], "reserved": ["What is the keyword `this`?"], "every": ["What are some ways to decide which code to test?", "What is a port?", "What is the keyword `this`?"], "non-arrow": ["What is the keyword `this`?"], "gets": ["What is a cookie and what kinds of things are they commonly used for?", "What is the keyword `this`?"], "usually": ["What is an adjacency list?", "What is the keyword `this`?", "What is a mock? What are some things you would mock?", "What is the purpose of the `connect` function? What does it return?"], "refer": ["What is a port?", "What is the keyword `this`?"], "current": ["What is the keyword `this`?"], "bind": ["What does the `bind` function do?"], "method": ["What does the `bind` function do?", "What is a port?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some differences between Web Sockets and HTTP?", "What are some differences between client side and server side routing?", "What is the difference between a static method and an instance method?", "What is the purpose of `componentWillUnmount`?"], "returns": ["What does the `bind` function do?", "What is an action creator?", "What is a reducer?", "What does the `mapStateToProps` function do?", "What are some ways of managing asynchronous code in JavaScript?"], "allows": ["What does the `bind` function do?", "What is the purpose of the `key` prop when rendering a list of components?", "What is the difference between Node.js and Express.js?", "What are differences between ``display: inline`` and ``display: block``?", "What is an ORM? What do they do?", "What is a cookie and what kinds of things are they commonly used for?", "How does data flow in a React/Redux application?", "What is React? When and why would you use it?", "What is CORS? How does it work?", "What is an IP address?", "What is the session object in Flask?", "What is JSON?", "What is the purpose of the `connect` function? What does it return?", "What is PostgreSQL?", "What is event delegation? Why would you use it?", "What is the Same Origin Policy?", "What are some differences between Web Sockets and HTTP?", "What is continuous integration?", "What is redux-thunk and why would you use it?", "What are important differences between Python and JavaScript?", "What is JSX?", "What is CSRF? What is the purpose of the CSRF token?", "What is the purpose of a `salt` when hashing a password?"], "reassign": ["What does the `bind` function do?"], "suppose": ["What does the `bind` function do?"], "fn": ["What does the `bind` function do?"], "c": ["What does the `bind` function do?"], "fn.bind": ["What does the `bind` function do?"], "copy": ["What does the `bind` function do?"], "argument": ["What does the `bind` function do?"], "returned": ["What does the `bind` function do?", "What is a jQuery object?", "What does `RETURNING` do in SQL? When would you use it?"], "any": ["What does the `bind` function do?"], "subsequent": ["What does the `bind` function do?"], "allow": ["What does the `bind` function do?", "What is the purpose of `form.hidden_tag()`?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?", "What is the difference between SQL and PostgreSQL?", "What does the `next` function do?", "What is the value of using JSONSchema for validation?", "What is AJAX? Why would you use it?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "preset": ["What does the `bind` function do?"], "nbsp": ["What does the `bind` function do?", "What is CORS? How does it work?", "What is the purpose of `form.hidden_tag()`?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What are some ways to manage the complexities of a large codebase, like Warbler?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "What are two different ways to handle page-not-found user experiences using React Router?", "What in React makes the `render` function run?", "What exactly does Flask's `jsonify()` do?", "What is the difference between Component and PureComponent?"], "display": ["What are differences between ``display: inline`` and ``display: block``?", "What are two different ways to handle page-not-found user experiences using React Router?"], "inline": ["What are differences between ``display: inline`` and ``display: block``?"], "respect": ["What are differences between ``display: inline`` and ``display: block``?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?"], "width": ["What are differences between ``display: inline`` and ``display: block``?"], "height": ["What are differences between ``display: inline`` and ``display: block``?"], "properties": ["What are differences between ``display: inline`` and ``display: block``?"], "horizontal": ["What are differences between ``display: inline`` and ``display: block``?"], "space": ["What are differences between ``display: inline`` and ``display: block``?", "What is Big O Notation?", "What is the difference between time and space complexity?"], "stack": ["What are differences between ``display: inline`` and ``display: block``?", "What are some differences between client side and server side routing?", "What is the call stack?", "What is a stack? Where and how are they used?"], "vertically": ["What are differences between ``display: inline`` and ``display: block``?"], "advantages": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "css": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "framework": ["What is React? When and why would you use it?", "What is the difference between Node.js and Express.js?", "What is the role of web application framework, like Flask?", "What is jQuery?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "twitter": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "bootstrap": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "benefit": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "frameworks": ["What is jQuery?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "quickly": ["What is the purpose of the `key` prop when rendering a list of components?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "polished-looking": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "website": ["What is a hostname?", "What is DNS?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "running": ["What is the purpose of a `salt` when hashing a password?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "without": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What is the purpose of the `key` prop when rendering a list of components?", "What does the `mapDispatchToProps` function do?", "What is a stateless functional component?", "What is an IP address?", "What is AJAX? Why would you use it?", "What is the difference between GET and POST?", "What is a unit test?", "How does data flow in a React/Redux application?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "pour": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "hours": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "building": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is the difference between Node.js and Express.js?", "What is AJAX? Why would you use it?", "What is a stack? Where and how are they used?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "grid": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "system": ["What is a mock? What are some things you would mock?", "What are trees used for?", "What is PostgreSQL?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "base": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "styles": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "another": ["What is the Same Origin Policy?", "What are some ways to decide which code to test?", "What are some difference between state and props?", "What are some differences between Web Sockets and HTTP?", "What are some differences between client side and server side routing?", "What is a stateless functional component?", "What are two different ways to handle page-not-found user experiences using React Router?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are important differences between Python and JavaScript?", "What are some ways of managing asynchronous code in JavaScript?", "What are some limitations of AJAX request?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "gives": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "developers": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "shorthand": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "popular": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "often": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "across": ["What is an environment variable and what are they used for?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "projects": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are some advantages to using a CSS framework like Twitter Bootstrap?"], "companies": ["What are some advantages to using a CSS framework like Twitter Bootstrap?"], "jquery": ["What is a jQuery object?", "When might you not use jQuery?", "What is jQuery?"], "library": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is a mock? What are some things you would mock?", "What is jQuery?"], "manipulating": ["What is jQuery?"], "dom": ["When might you not use jQuery?", "What is a React `ref` and when might you use them?", "What is a jQuery object?", "What is a controlled component?", "What is jQuery?", "When would you use `componentDidUpdate`?", "What is the purpose of `componentWillUnmount`?"], "adding": ["What is RESTful routing?", "What is jQuery?"], "event": ["What is an uncontrolled component?", "What is jQuery?", "What is event delegation? Why would you use it?", "What is the purpose of `componentWillUnmount`?", "What is the `event` object? What kinds of things are in it?"], "listeners": ["What is jQuery?"], "animating": ["What is jQuery?"], "making": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "When might you not use jQuery?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is RESTful routing?", "What is jQuery?"], "http": ["What is the Same Origin Policy?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is a port?", "What is a JWT?", "What are some differences between Web Sockets and HTTP?", "What is an HTTP header?", "What is a mock? What are some things you would mock?", "What is an HTTP Response Code?", "What is RESTful routing?", "What is jQuery?", "What is AJAX? Why would you use it?", "What is Webpack?", "What is the difference between GET and POST?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What is a resource?", "What are some limitations of AJAX request?", "What is JSON?"], "requests": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "In the Hack or Snooze API project, what did we use async/await for?", "What is the role of web application framework, like Flask?", "What is jQuery?", "What is AJAX? Why would you use it?", "What is Webpack?", "What is the difference between GET and POST?", "What is the purpose of `componentWillUnmount`?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What are some limitations of AJAX request?"], "libraries": ["What is an uncontrolled component?", "What is jQuery?"], "smaller": ["How does data flow in a React application?", "What is jQuery?"], "therefore": ["What is the difference between `HAVING` and `WHERE`?", "What is jQuery?"], "amount": ["Compare and contrast unit, integration and end-to-end tests.", "What is jQuery?"], "documentation": ["What is jQuery?"], "set": ["What are some differences between client side and server side routing?", "What is the role of web application framework, like Flask?", "What is DNS?", "What is jQuery?", "What is the session object in Flask?", "What is AJAX? Why would you use it?", "What is an API?", "What is an adjacency list?"], "strict": ["What is jQuery?"], "ways": ["What are some ways to decide which code to test?", "What are two ways of handling redirects with React Router? When would you use each?", "What is a port?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is jQuery?", "What are two different ways to handle page-not-found user experiences using React Router?", "What is the value of using JSONSchema for validation?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What are some ways of managing asynchronous code in JavaScript?"], "unlike": ["What are important differences between Python and JavaScript?", "What is jQuery?"], "html": ["What is a single page application?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is a jQuery object?", "What is the purpose of the React Router?", "What is JSX?", "What is the `event` object? What kinds of things are in it?"], "perform": ["What is a jQuery object?", "What is the component life cycle?"], "actions": ["In the Hack or Snooze API project, what did we use async/await for?", "What is a React `ref` and when might you use them?", "What does the `mapDispatchToProps` function do?", "What is a jQuery object?", "What is the component life cycle?", "What is redux-thunk and why would you use it?"], "parent": ["What is a jQuery object?", "What is the difference between a binary search tree and binary tree?"], "this": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "What is the value of using JSONSchema for validation?", "What is AJAX? Why would you use it?", "What is an ORM? What do they do?", "What is the error-first callback pattern?", "What is React? When and why would you use it?", "How is a Component created in React?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What does the `mapDispatchToProps` function do?", "What is an IP address?", "When would you use `componentDidMount`?", "What are some limitations of AJAX request?", "What is a jQuery object?", "What is event delegation? Why would you use it?", "What is a reducer?", "What is a Promise?", "What is an integration test?", "What is the purpose of `form.hidden_tag()`?", "What is the Same Origin Policy?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some differences between client side and server side routing?", "What are important differences between Python and JavaScript?", "What is the purpose of `componentWillUnmount`?", "What is a unit test?", "What is the purpose of a `salt` when hashing a password?"], "however": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is a jQuery object?", "What are important differences between Python and JavaScript?", "What are some advantages/disadvantages to using Linked Lists versus arrays?", "What is CSRF? What is the purpose of the CSRF token?"], "inserted": ["What is a jQuery object?"], "frequently": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What is a jQuery object?", "What are linked lists used for?"], "chained": ["What is a jQuery object?", "What are some ways of managing asynchronous code in JavaScript?"], "h1": ["What is a jQuery object?"], "''": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What is a jQuery object?", "What is the component life cycle?", "What is event delegation? Why would you use it?", "What is the purpose of `componentWillUnmount`?", "What is a cookie and what kinds of things are they commonly used for?", "What is a mock? What are some things you would mock?"], ".text": ["What is a jQuery object?"], "awesome": ["What is a jQuery object?"], ".css": ["What is a jQuery object?"], "color": ["What is a jQuery object?"], "red": ["What is a jQuery object?"], ".attr": ["What is a jQuery object?"], "id": ["What is a jQuery object?", "How can you implement authentication with a JWT?  Describe how it works at a high level."], "main-heading": ["What is a jQuery object?"], "etc": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is a jQuery object?", "What is the role of web application framework, like Flask?"], "might": ["What is a React `ref` and when might you use them?", "You can pass information to Flask either as a parameter in a route URL", "When might you not use jQuery?", "What is a mock? What are some things you would mock?"], "api": ["In the Hack or Snooze API project, what did we use async/await for?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "When might you not use jQuery?", "What is an API?", "When would you use `componentDidMount`?"], "standardized": ["When might you not use jQuery?"], "makes": ["When might you not use jQuery?", "What does the `mapDispatchToProps` function do?", "What is the value of using JSONSchema for validation?", "What is the purpose of the Bcrypt module?", "What in React makes the `render` function run?"], "less": ["When might you not use jQuery?", "What are some differences between Web Sockets and HTTP?", "What is a heap? What are they good for?", "What is the difference between a binary search tree and binary tree?", "How does data flow in a React/Redux application?"], "valuable": ["When might you not use jQuery?"], "simple": ["When might you not use jQuery?"], "anything": ["When might you not use jQuery?"], "unnecessary": ["When might you not use jQuery?"], "dependency": ["When might you not use jQuery?"], "delegation": ["What is event delegation? Why would you use it?"], "why": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "What is event delegation? Why would you use it?", "What is AJAX? Why would you use it?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What is Redux? Why would you use it?"], "allowing": ["What is event delegation? Why would you use it?"], "element": ["Explain how hash tables work", "What is the `event` object? What kinds of things are in it?", "What is event delegation? Why would you use it?"], "delegate": ["What is event delegation? Why would you use it?"], "action": ["What is an action creator?", "What does the `mapDispatchToProps` function do?", "What is an action?", "What does `RETURNING` do in SQL? When would you use it?", "What is event delegation? Why would you use it?", "What is a reducer?"], "many": ["What is a port?", "What is the session object in Flask?", "What is event delegation? Why would you use it?", "What is the value of using JSONSchema for validation?", "What are graphs used for?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What are some ways of managing asynchronous code in JavaScript?"], "li": ["What is event delegation? Why would you use it?"], "ol": ["What is event delegation? Why would you use it?"], "assign": ["What is event delegation? Why would you use it?"], "listener": ["What is event delegation? Why would you use it?"], "instead": ["What are some differences between client side and server side routing?", "What is RESTful routing?", "What is continuous integration?", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What is redux-thunk and why would you use it?", "What are important differences between Python and JavaScript?", "What is event delegation? Why would you use it?"], "kinds": ["What is the `event` object? What kinds of things are in it?", "What is a cookie and what kinds of things are they commonly used for?"], "contains": ["What is the `event` object? What kinds of things are in it?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a JWT?"], "information": ["What is the Same Origin Policy?", "What is a JWT?", "What are some difference between state and props?", "What is an HTTP header?", "You can pass information to Flask either as a parameter in a route URL", "What is an HTTP Response Code?", "What is the difference between SQL and PostgreSQL?", "What is PostgreSQL?", "When would you use `componentDidUpdate`?", "What does `RETURNING` do in SQL? When would you use it?", "What is the `event` object? What kinds of things are in it?", "What is a cookie and what kinds of things are they commonly used for?"], "triggered": ["What is the `event` object? What kinds of things are in it?"], "property": ["What is the `event` object? What kinds of things are in it?"], "useful": ["Compare and contrast unit, integration and end-to-end tests.", "What is the `event` object? What kinds of things are in it?", "What does the `mapDispatchToProps` function do?", "What are linked lists used for?"], "event.target": ["What is the `event` object? What kinds of things are in it?"], "also": ["What is React? When and why would you use it?", "What is Redux? Why would you use it?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is an IP address?", "What is the session object in Flask?", "What is an environment variable and what are they used for?", "What is redux-thunk and why would you use it?", "What are important differences between Python and JavaScript?", "What does `RETURNING` do in SQL? When would you use it?", "What is the value of using JSONSchema for validation?", "What is a reducer?", "What is Webpack?", "What does the `mapStateToProps` function do?", "What is the `event` object? What kinds of things are in it?", "What are linked lists used for?"], "x/y": ["What is the `event` object? What kinds of things are in it?"], "coordinates": ["What is the `event` object? What kinds of things are in it?"], "much": ["What are some differences between Web Sockets and HTTP?", "What are three features of the Redux developer tool in Chrome?", "What is a stack? Where and how are they used?", "What is JSX?", "What is the `event` object? What kinds of things are in it?"], "hack": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "In the Hack or Snooze API project, what did we use async/await for?"], "snooze": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "In the Hack or Snooze API project, what did we use async/await for?"], "project": ["In the Hack or Snooze API project, what did we use async/await for?"], "async/await": ["What is the error-first callback pattern?", "In the Hack or Snooze API project, what did we use async/await for?"], "we": ["In the Hack or Snooze API project, what did we use async/await for?", "What is RESTful routing?", "What is an environment variable and what are they used for?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What does `RETURNING` do in SQL? When would you use it?", "What is middleware?"], "handle": ["In the Hack or Snooze API project, what did we use async/await for?", "What are two different ways to handle page-not-found user experiences using React Router?"], "asynchronous": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "In the Hack or Snooze API project, what did we use async/await for?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What are some ways of managing asynchronous code in JavaScript?", "What are some limitations of AJAX request?"], "specifically": ["In the Hack or Snooze API project, what did we use async/await for?"], "ajax": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "In the Hack or Snooze API project, what did we use async/await for?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is AJAX? Why would you use it?", "What are some limitations of AJAX request?"], "await": ["In the Hack or Snooze API project, what did we use async/await for?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "What are the differences between an async function and a regular function?", "What are some ways of managing asynchronous code in JavaScript?"], "pause/block": ["In the Hack or Snooze API project, what did we use async/await for?"], "code": ["What are some ways to decide which code to test?", "In the Hack or Snooze API project, what did we use async/await for?", "What is TDD? What are some benefits and drawbacks?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "Compare and contrast unit, integration and end-to-end tests.", "What is an HTTP Response Code?", "What is continuous integration?", "What is the value of using JSONSchema for validation?", "What are some ways of managing asynchronous code in JavaScript?", "What are some limitations of AJAX request?"], "received": ["In the Hack or Snooze API project, what did we use async/await for?", "What is an HTTP Response Code?"], "response": ["What is CORS? How does it work?", "In the Hack or Snooze API project, what did we use async/await for?", "What is an HTTP Response Code?", "What are some ways of managing asynchronous code in JavaScript?", "What is middleware?"], "async": ["In the Hack or Snooze API project, what did we use async/await for?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "What are the differences between an async function and a regular function?", "What are some ways of managing asynchronous code in JavaScript?", "What are some limitations of AJAX request?"], "happens": ["What happens if two values hash to the same index?", "What happens if you forget the `await` keyword in front of an asynchronous expression?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?"], "forget": ["What happens if you forget the `await` keyword in front of an asynchronous expression?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?"], "declaration": ["What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?"], "uses": ["What is the difference between SQL and PostgreSQL?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?"], "syntaxerror": ["What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?"], "thrown": ["What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?"], "sure": ["What is the Same Origin Policy?", "What is the difference between authorization and authentication?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is RESTful routing?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?", "What is an integration test?"], "always": ["What is a controlled component?", "How does data flow in a React/Redux application?", "What are the differences between an async function and a regular function?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?"], "defining": ["What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?"], "needs": ["What is Redux? Why would you use it?", "What is the difference between a static method and an instance method?", "What happens if you forget the `async` keyword on the declaration of a function that uses `await` inside of it?"], "front": ["What is React? When and why would you use it?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What happens if you forget the `await` keyword in front of an asynchronous expression?"], "promise": ["What is a Promise?", "What are some ways of managing asynchronous code in JavaScript?", "What are the differences between an async function and a regular function?", "What happens if you forget the `await` keyword in front of an asynchronous expression?"], "eventual": ["What happens if you forget the `await` keyword in front of an asynchronous expression?"], "'ll": ["What happens if you forget the `await` keyword in front of an asynchronous expression?"], "talk": ["What is a port?", "What happens if you forget the `await` keyword in front of an asynchronous expression?"], "promises": ["What is the error-first callback pattern?", "What are some ways of managing asynchronous code in JavaScript?", "What happens if you forget the `await` keyword in front of an asynchronous expression?"], "node": ["What is the error-first callback pattern?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "What happens if you forget the `await` keyword in front of an asynchronous expression?"], "difference": ["What is the difference between PUT and PATCH?", "What is the difference between authorization and authentication?", "What are some difference between state and props?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?", "What is the difference between `HAVING` and `WHERE`?", "What is the difference between a tree and a graph?", "What is the difference between Node.js and Express.js?", "What is the difference between time and space complexity?", "What is the difference between SQL and PostgreSQL?", "What is the difference between a binary search tree and binary tree?", "What is the difference between a static method and an instance method?", "What are important differences between Python and JavaScript?", "What is the difference between GET and POST?", "What is the difference between Component and PureComponent?", "What is the difference between an `INNER` and `OUTER` join?"], "static": ["What is the difference between a static method and an instance method?"], "directly": ["What is the purpose of `componentWillUnmount`?", "What is an environment variable and what are they used for?", "What is the difference between a static method and an instance method?"], "whereas": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is the difference between authorization and authentication?", "What are some difference between state and props?", "What is the difference between time and space complexity?", "What is the difference between a static method and an instance method?", "What are important differences between Python and JavaScript?", "What are some advantages/disadvantages to using Linked Lists versus arrays?", "What is the difference between GET and POST?", "What are the differences between an async function and a regular function?", "What is the difference between a tree and a graph?"], "either": ["Explain how hash tables work", "You can pass information to Flask either as a parameter in a route URL", "What is a Promise?", "What is the difference between a static method and an instance method?"], "special": ["Explain how hash tables work", "What is the difference between a static method and an instance method?"], "behavior": ["What are React hooks?", "What is the difference between a static method and an instance method?"], "exist": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What is the difference between a static method and an instance method?", "What are two different ways to handle page-not-found user experiences using React Router?"], "made": ["What are some differences between client side and server side routing?", "What is a controlled component?", "What is the difference between a static method and an instance method?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What is CSRF? What is the purpose of the CSRF token?"], "trying": ["What is a port?", "What is the difference between a static method and an instance method?", "What is DNS?", "What is the purpose of a `salt` when hashing a password?", "What is a mock? What are some things you would mock?"], "see": ["What is CORS? How does it work?", "What are some differences between Web Sockets and HTTP?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What are some limitations of AJAX request?", "What is the difference between a static method and an instance method?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "something": ["What is the difference between authorization and authentication?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is RESTful routing?", "What is an environment variable and what are they used for?", "What is the difference between a static method and an instance method?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What are some limitations of AJAX request?", "What is a mock? What are some things you would mock?"], "array.isarray": ["What is the difference between a static method and an instance method?"], "js": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is the difference between Node.js and Express.js?", "What is Babel?", "What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are important differences between Python and JavaScript?", "What is the value of using JSONSchema for validation?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What is JSX?", "What is JSON?"], "a.slice": ["In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?"], "a.push": ["In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?"], "contain": ["In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What is the difference between a tree and a graph?", "What is an HTTP header?"], "**not**": ["In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?"], "address": ["What is an IP address?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?"], "memory": ["What is the difference between time and space complexity?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?"], "since": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What are some ways to decide which code to test?", "What is the purpose of the `key` prop when rendering a list of components?", "What are some differences between client side and server side routing?", "What is an IP address?", "What is an environment variable and what are they used for?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?", "What does the `mapStateToProps` function do?", "What is JSON?"], "slice": ["In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?"], "reference": ["In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?"], "anymore": ["In JS: `let a = [1, 2, 3]; b = a.slice(); a.push(4);`: does `b` contain 4? Why or why not?"], "strategies": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "'ve": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "learned": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "organized": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "larger": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "separating": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "logic": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "files": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is an uncontrolled component?"], "ui": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "oo": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "being": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "mindful": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are some limitations of AJAX request?"], "names": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "descriptive": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "documenting": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "easily": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?", "Compare and contrast unit, integration and end-to-end tests.", "What is JSX?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "understood": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "git": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "committing": ["What are some strategies you've learned for being organized in larger projects, like Hack or Snooze?"], "hostname": ["What is a hostname?", "What is an HTTP header?"], "nickname": ["What is a hostname?"], "server": ["What is CORS? How does it work?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is a hostname?", "What is a port?", "What are some differences between Web Sockets and HTTP?", "What are some differences between client side and server side routing?", "What is the signature portion of the JWT?  What does it do?", "What is the session object in Flask?", "What is the purpose of the React Router?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the difference between GET and POST?", "What is a single page application?", "What is a cookie and what kinds of things are they commonly used for?"], "hosted": ["What is a hostname?"], "ip": ["What is an IP address?"], "unique": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is an IP address?", "What is a port?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?"], "points": ["What is an IP address?"], "computer": ["What is an IP address?", "What is DNS?"], "network": ["What is an IP address?", "What is the purpose of `componentWillUnmount`?"], "formatted": ["What is an IP address?"], "four": ["What is an IP address?"], "numbers": ["What is an IP address?"], "0-255": ["What is an IP address?"], "seperated": ["What is an IP address?"], "period": ["What is an IP address?"], "lead": ["What is an IP address?", "What are some limitations of AJAX request?"], "issues": ["What is a controlled component?", "What is an IP address?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "availibility": ["What is an IP address?"], "concept": ["What is an IP address?"], "virtual": ["When would you use `componentDidUpdate`?", "What is a controlled component?", "What is an IP address?"], "rithm": ["What is an IP address?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "school": ["What is an IP address?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "globally": ["What is an IP address?"], "vitual": ["What is an IP address?"], "within": ["What is an IP address?", "What are some ways of managing asynchronous code in JavaScript?"], "still": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is an IP address?", "What does the `mapDispatchToProps` function do?"], "identification": ["What is an IP address?"], "device": ["What is an IP address?", "What is DNS?"], "port": ["What is the Same Origin Policy?", "What is a port?"], "65,535": ["What is a port?"], "ports": ["What is a port?"], "analogy": ["What is a port?"], "house": ["What is a port?"], "doors": ["What is a port?"], "there": ["You can pass information to Flask either as a parameter in a route URL", "What is a controlled component?", "What is a port?"], "identify": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a port?", "What is the purpose of the `key` prop when rendering a list of components?"], "80": ["What is a port?"], "correspond": ["What is a port?"], "protocol": ["What is the Same Origin Policy?", "What is a port?"], "going": ["What are some ways to decide which code to test?", "What is a port?"], "expecting": ["What is a port?"], "communicating": ["What is a port?"], "dns": ["What is DNS?"], "attempting": ["What is an HTTP Response Code?", "What is DNS?"], "connect": ["In `psql`, how do you connect to a database?", "What is DNS?", "What is the purpose of the `connect` function? What does it return?"], "tries": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is DNS?"], "find": ["Explain how hash tables work", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is DNS?", "What is an API?", "What is the purpose of a `salt` when hashing a password?"], "try": ["What are some ways of managing asynchronous code in JavaScript?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What is DNS?"], "cache": ["What is DNS?"], "visited": ["What is DNS?"], "site": ["What is DNS?"], "recently": ["What is DNS?"], "router": ["What are two ways of handling redirects with React Router? When would you use each?", "What are some differences between client side and server side routing?", "What is the purpose of the React Router?", "What is DNS?", "What are two different ways to handle page-not-found user experiences using React Router?"], "isp": ["What is DNS?"], "comcast": ["What is DNS?"], "computers": ["What is DNS?"], "job": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is DNS?"], "looking": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is DNS?"], "these": ["What happens if two values hash to the same index?", "What is DNS?"], "servers": ["What is JSON?", "What is DNS?"], "attempt": ["What is DNS?"], "store": ["What is a store?", "What is the difference between SQL and PostgreSQL?", "What is DNS?", "What is PostgreSQL?", "What is the purpose of the `<Provider>` component?"], "location": ["What is an HTTP Response Code?", "What is DNS?"], "websites": ["What is AJAX? Why would you use it?", "What is DNS?"], "phonebook": ["What is DNS?"], "internet": ["What is DNS?"], "header": ["What is CORS? How does it work?", "What is a JWT?", "What is an HTTP header?", "What is the signature portion of the JWT?  What does it do?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "headers": ["What is an HTTP header?"], "sent": ["What is CORS? How does it work?", "What is an HTTP header?", "What is the purpose of the React Router?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the difference between GET and POST?", "What is a cookie and what kinds of things are they commonly used for?", "What is JSON?"], "request": ["What is CORS? How does it work?", "What is the Same Origin Policy?", "What is an HTTP header?", "How do you collect data from the body of the request using Flask?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What are some differences between client side and server side routing?", "What is an HTTP Response Code?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the difference between GET and POST?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What is CSRF? What is the purpose of the CSRF token?", "What are some limitations of AJAX request?", "What is middleware?"], "date": ["What is an HTTP header?"], "language": ["What is a resource?", "What is the difference between SQL and PostgreSQL?", "What is an HTTP header?"], "cookies": ["What is the session object in Flask?", "What is an HTTP header?"], "authorization": ["When would you use `componentDidMount`?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the difference between authorization and authentication?", "What is an HTTP header?"], "tells": ["What is an HTTP Response Code?"], "200": ["What is an HTTP Response Code?"], "means": ["What is one way encryption?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?", "What is an HTTP Response Code?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What is a Promise?", "What is the purpose of a `salt` when hashing a password?"], "problems": ["What is an HTTP Response Code?", "What are some limitations of AJAX request?"], "successful": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is an HTTP Response Code?"], "404": ["What is an HTTP Response Code?"], "typical": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is an HTTP Response Code?"], "found": ["How do you collect data from the query string using Flask?", "What is an HTTP Response Code?", "What are two different ways to handle page-not-found user experiences using React Router?"], "post": ["What is the difference between GET and POST?", "How do you collect data from the body of the request using Flask?"], "side": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What are some differences between client side and server side routing?", "What is the purpose of the React Router?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the difference between GET and POST?", "What does idempotent mean? Which HTTP verbs are idempotent?", "How does data flow in a React/Redux application?"], "effects": ["What does idempotent mean? Which HTTP verbs are idempotent?", "What is the difference between GET and POST?"], "vs.": ["What is the difference between GET and POST?"], "intention": ["What is the difference between GET and POST?"], "changing": ["What are some differences between Web Sockets and HTTP?", "What is the purpose of the React Router?", "What is the difference between GET and POST?"], "sending": ["What is the Same Origin Policy?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is the session object in Flask?", "What is the difference between GET and POST?", "What is JSON?"], "query": ["How do you collect data from the query string using Flask?", "You can pass information to Flask either as a parameter in a route URL", "What is the difference between SQL and PostgreSQL?", "What is the difference between GET and POST?"], "parameter": ["What is the error-first callback pattern?", "What does the `mapDispatchToProps` function do?", "You can pass information to Flask either as a parameter in a route URL", "How do you collect data from a URL parameter using Flask?", "What is an action?", "What is the difference between GET and POST?", "What does the `mapStateToProps` function do?", "What is the purpose of the `connect` function? What does it return?"], "change": ["Explain how hash tables work", "What is the difference between time and space complexity?", "What is the session object in Flask?", "What is an action?", "What is an uncontrolled component?", "What is the difference between GET and POST?", "What is Redux? Why would you use it?", "What is the purpose of a `salt` when hashing a password?"], "url": ["You can pass information to Flask either as a parameter in a route URL", "How do you collect data from a URL parameter using Flask?", "What is the purpose of the React Router?", "What is the difference between GET and POST?"], "send": ["What is the Same Origin Policy?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is the purpose of the React Router?", "What is the difference between GET and POST?", "What is a cookie and what kinds of things are they commonly used for?"], "technologies": ["What is AJAX? Why would you use it?"], "us": ["What is React? When and why would you use it?", "What is CORS? How does it work?", "What is the difference between SQL and PostgreSQL?", "What is PostgreSQL?", "What is AJAX? Why would you use it?", "What is JSX?", "What is an ORM? What do they do?"], "browser": ["What is CORS? How does it work?", "What is the Same Origin Policy?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is Babel?", "What is AJAX? Why would you use it?", "What is Webpack?", "What is JSX?"], "page": ["What is React? When and why would you use it?", "What are two ways of handling redirects with React Router? When would you use each?", "What are two different ways to handle page-not-found user experiences using React Router?", "What is AJAX? Why would you use it?", "What is a single page application?", "What are some limitations of AJAX request?"], "refreshing": ["What is AJAX? Why would you use it?"], "leads": ["What is AJAX? Why would you use it?"], "amazing": ["What is AJAX? Why would you use it?"], "abilities": ["What is AJAX? Why would you use it?"], "interactive": ["What is AJAX? Why would you use it?"], "load": ["What is AJAX? Why would you use it?", "What is the purpose of the React Router?", "What are some limitations of AJAX request?"], "refresh": ["What is AJAX? Why would you use it?"], "json": ["What exactly does Flask's `jsonify()` do?", "What is a JWT?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is JSON?"], "string": ["How do you collect data from the query string using Flask?", "You can pass information to Flask either as a parameter in a route URL", "What exactly does Flask's `jsonify()` do?", "What is the purpose of a `salt` when hashing a password?", "What is JSON?"], "looks": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is JSON?"], "common": ["What is the error-first callback pattern?", "What is a mock? What are some things you would mock?", "What is JSON?"], "exchange": ["What is JSON?"], "format": ["What is JSON?"], "clients": ["What is JSON?"], "everything": ["What is the difference between an `INNER` and `OUTER` join?", "What is the value of using JSONSchema for validation?", "What is JSON?"], "ability": ["What is JSON?"], "convert": ["What is an ORM? What do they do?", "What exactly does Flask's `jsonify()` do?", "What is JSON?"], "usable": ["What is JSON?"], "json.parse": ["What is JSON?"], "json.stringify": ["What is JSON?"], "clearly": ["What is an API?"], "defined": ["What is an API?"], "communication": ["What are some differences between Web Sockets and HTTP?", "What is an API?"], "various": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is an API?"], "components": ["What is React? When and why would you use it?", "What are some difference between state and props?", "What are React hooks?", "What is the purpose of the `key` prop when rendering a list of components?", "What is a stateless functional component?", "What are propTypes?", "How does data flow in a React application?", "When would you use `componentDidUpdate`?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What is JSX?", "What is an API?", "What is Redux? Why would you use it?", "How does data flow in a React/Redux application?"], "google": ["What are some differences between Web Sockets and HTTP?", "What are graphs used for?", "What is an API?"], "maps": ["What are graphs used for?", "What is an API?"], "draw": ["What is an API?"], "directions": ["What is an API?"], "limitations": ["What are some limitations of AJAX request?"], "limitation": ["What are some limitations of AJAX request?"], "calls": ["When would you use `componentDidMount`?", "What are some limitations of AJAX request?", "What is a mock? What are some things you would mock?"], "order": ["What does the `mapDispatchToProps` function do?", "What does `RETURNING` do in SQL? When would you use it?", "What are some limitations of AJAX request?", "What is middleware?"], "accomplish": ["What are some limitations of AJAX request?"], "else": ["What are some limitations of AJAX request?"], "confusing": ["What are some limitations of AJAX request?"], "done": ["What is the value of using JSONSchema for validation?", "What are some ways to decide which code to test?", "What are some limitations of AJAX request?"], "correctly": ["What does `RETURNING` do in SQL? When would you use it?", "What is an integration test?", "What are some limitations of AJAX request?"], "potentially": ["What is TDD? What are some benefits and drawbacks?", "What are some limitations of AJAX request?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "parts": ["What are three features of the Redux developer tool in Chrome?", "What is a JWT?", "What are some limitations of AJAX request?"], "times": ["What does idempotent mean? Which HTTP verbs are idempotent?", "What are some limitations of AJAX request?", "What is the component life cycle?"], "confuse": ["What are some limitations of AJAX request?"], "end": ["What is React? When and why would you use it?", "What is the Same Origin Policy?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "Compare and contrast unit, integration and end-to-end tests.", "What are some limitations of AJAX request?"], "user": ["What is the Same Origin Policy?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What are some differences between client side and server side routing?", "What is RESTful routing?", "What is the purpose of the React Router?", "What are two different ways to handle page-not-found user experiences using React Router?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is CSRF? What is the purpose of the CSRF token?", "What is a cookie and what kinds of things are they commonly used for?", "What are some limitations of AJAX request?"], "security": ["What are some limitations of AJAX request?"], "with": ["If a JWT is intercepted, can the attacker see what's inside the payload?", "How do you collect data from the query string using Flask?", "What are some limitations of AJAX request?"], "ca": ["What is the Same Origin Policy?", "What is the session object in Flask?", "What are some limitations of AJAX request?"], "apis": ["What are some limitations of AJAX request?"], "due": ["What is CSRF? What is the purpose of the CSRF token?", "What are some limitations of AJAX request?"], "answer": ["What are two ways of handling redirects with React Router? When would you use each?", "What are some limitations of AJAX request?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "same": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is CORS? How does it work?", "What is the Same Origin Policy?"], "origin": ["What is CORS? How does it work?", "What is the Same Origin Policy?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?"], "policy": ["What is CORS? How does it work?", "What is the Same Origin Policy?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?"], "must": ["Explain how hash tables work", "What is the Same Origin Policy?", "What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is the difference between a binary search tree and binary tree?", "How can you implement authentication with a JWT?  Describe how it works at a high level."], "come": ["What is the Same Origin Policy?", "What are two ways of handling redirects with React Router? When would you use each?"], "protection": ["What is the Same Origin Policy?"], "someone": ["What is the Same Origin Policy?", "What are two ways of handling redirects with React Router? When would you use each?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is the session object in Flask?", "What are important differences between Python and JavaScript?", "What is the purpose of a `salt` when hashing a password?", "What is the difference between an `INNER` and `OUTER` join?"], "malicious": ["What is the Same Origin Policy?"], "refers": ["What is the Same Origin Policy?", "What is the difference between authorization and authentication?"], "domain": ["What is the Same Origin Policy?", "What is a cookie and what kinds of things are they commonly used for?"], "and/or": ["What is the Same Origin Policy?", "What is the difference between Component and PureComponent?"], "cors": ["What is CORS? How does it work?"], "how": ["How do you collect data from the query string using Flask?", "What is CORS? How does it work?", "How is a Component created in React?", "How do you collect data from the body of the request using Flask?", "You can pass information to Flask either as a parameter in a route URL", "How do you collect data from a URL parameter using Flask?", "How does data flow in a React application?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "How does data flow in a React/Redux application?"], "work": ["Explain how hash tables work", "What is CORS? How does it work?", "What is the purpose of a `salt` when hashing a password?", "What are some differences between Web Sockets and HTTP?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is CSRF? What is the purpose of the CSRF token?", "What is an integration test?"], "stands": ["What is CORS? How does it work?", "What is CSRF? What is the purpose of the CSRF token?", "What is a JWT?", "What is TDD? What are some benefits and drawbacks?"], "cross": ["What is CORS? How does it work?"], "resource": ["What is CORS? How does it work?", "What is a resource?"], "sharing": ["What is CORS? How does it work?"], "technology": ["What is CORS? How does it work?", "What is the difference between Node.js and Express.js?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "bypass": ["What is CORS? How does it work?"], "requires": ["What is CORS? How does it work?", "What are important differences between Python and JavaScript?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "specifies": ["What is CORS? How does it work?"], "origins": ["What is CORS? How does it work?"], "allowed": ["What is CORS? How does it work?", "How does data flow in a React/Redux application?"], "access-control-allow-origin": ["What is CORS? How does it work?"], "check": ["What is CORS? How does it work?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "present": ["What is CORS? How does it work?"], "coming": ["What is CORS? How does it work?"], "valid": ["What is CORS? How does it work?", "What is JSX?"], "important": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What are important differences between Python and JavaScript?"], "python": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are important differences between Python and JavaScript?", "What is the purpose of the Bcrypt module?", "What is an ORM? What do they do?", "What exactly does Flask's `jsonify()` do?"], "comparison": ["What are important differences between Python and JavaScript?", "What is the difference between Component and PureComponent?"], "dictionaries": ["What are important differences between Python and JavaScript?"], "lists": ["What are important differences between Python and JavaScript?", "What are some advantages/disadvantages to using Linked Lists versus arrays?", "What are linked lists used for?"], "1,2,3": ["What are important differences between Python and JavaScript?"], "==": ["What are important differences between Python and JavaScript?"], "box": ["What are important differences between Python and JavaScript?"], "structure": ["What are important differences between Python and JavaScript?", "What is the call stack?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "tuple": ["What are important differences between Python and JavaScript?"], "natively": ["What are important differences between Python and JavaScript?"], "testing": ["What are important differences between Python and JavaScript?", "What is a unit test?", "What is TDD? What are some benefits and drawbacks?", "What is an integration test?"], "doctests": ["What are important differences between Python and JavaScript?"], "writing": ["What are important differences between Python and JavaScript?", "What is TDD? What are some benefits and drawbacks?", "What is JSX?"], "tests": ["What are some ways to decide which code to test?", "What is TDD? What are some benefits and drawbacks?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "Compare and contrast unit, integration and end-to-end tests.", "What is continuous integration?", "What are three features of the Redux developer tool in Chrome?", "What are important differences between Python and JavaScript?"], "file": ["What is the purpose of the React Router?", "What is an environment variable and what are they used for?", "What are important differences between Python and JavaScript?", "What are trees used for?", "What is Webpack?", "What is a mock? What are some things you would mock?"], "throws": ["What are important differences between Python and JavaScript?"], "errors": ["What are important differences between Python and JavaScript?"], "undefined": ["What are important differences between Python and JavaScript?"], "throwing": ["What are important differences between Python and JavaScript?"], "error": ["What is the error-first callback pattern?", "What are important differences between Python and JavaScript?"], "difficult": ["What are important differences between Python and JavaScript?"], "debug": ["What are important differences between Python and JavaScript?"], "take": ["What is React? When and why would you use it?", "What are some differences between Web Sockets and HTTP?", "What is the purpose of the `key` prop when rendering a list of components?", "What are important differences between Python and JavaScript?", "What does `RETURNING` do in SQL? When would you use it?", "What is the value of using JSONSchema for validation?", "What exactly does Flask's `jsonify()` do?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is middleware?"], "advantage": ["What is React? When and why would you use it?", "What are important differences between Python and JavaScript?", "What does `RETURNING` do in SQL? When would you use it?", "What is middleware?"], "idea": ["What are important differences between Python and JavaScript?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What is Redux? Why would you use it?"], "throw": ["What are important differences between Python and JavaScript?"], "given": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "following": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "dictionary": ["How do you collect data from the query string using Flask?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What is the purpose of a `salt` when hashing a password?", "How do you collect data from the body of the request using Flask?"], "list": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What is the purpose of the `key` prop when rendering a list of components?", "What are some differences between client side and server side routing?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What is an adjacency list?"], "two": ["What are two ways of handling redirects with React Router? When would you use each?", "What happens if two values hash to the same index?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are two different ways to handle page-not-found user experiences using React Router?"], "key": ["What is a JWT?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What is the purpose of the `key` prop when rendering a list of components?", "What is the signature portion of the JWT?  What does it do?", "What is an action?", "What is redux-thunk and why would you use it?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a cookie and what kinds of things are they commonly used for?"], "student": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "program": ["What is a unit test?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "crashing": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "dict.get": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "'student": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "none": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "except": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "well": ["What happens if two values hash to the same index?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What is a heap? What are they good for?", "What is RESTful routing?", "What is the role of web application framework, like Flask?", "What does `RETURNING` do in SQL? When would you use it?", "What is Redux? Why would you use it?"], "py": ["How do you collect data from the query string using Flask?", "How do you collect data from a URL parameter using Flask?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing.", "How do you collect data from the body of the request using Flask?"], "dict": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "print": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "'this": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "thing": ["What is a queue? Where and how are they used?", "Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "statement": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "exists": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "accessing": ["Given the following dictionary: `{\"school\": \"Rithm\"}`, list two ways you can access a key of \"student\" without your python program crashing."], "unit": ["Compare and contrast unit, integration and end-to-end tests.", "What is a unit test?", "What is a mock? What are some things you would mock?"], "test": ["What are some ways to decide which code to test?", "What is TDD? What are some benefits and drawbacks?", "Compare and contrast unit, integration and end-to-end tests.", "What is a unit test?", "What is an integration test?", "What is a mock? What are some things you would mock?"], "small": ["What is a unit test?", "What is the purpose of a `salt` when hashing a password?", "What is continuous integration?"], "isolated": ["What is a unit test?"], "piece": ["What is a unit test?", "What is a cookie and what kinds of things are they commonly used for?", "What does the `next` function do?"], "interacts": ["What is a unit test?"], "integration": ["Compare and contrast unit, integration and end-to-end tests.", "What is an integration test?", "What is continuous integration?"], "pieces": ["What is continuous integration?", "What is an integration test?", "What is the difference between PUT and PATCH?"], "interact": ["What is an integration test?"], "view": ["What is an integration test?"], "routing": ["What are some differences between client side and server side routing?", "How do you collect data from a URL parameter using Flask?", "What is RESTful routing?", "What is the purpose of the React Router?", "What is a stack? Where and how are they used?", "What is an integration test?"], "returning": ["What does `RETURNING` do in SQL? When would you use it?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is an integration test?"], "works": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is an integration test?"], "role": ["What is the role of web application framework, like Flask?"], "web": ["What is a JWT?", "What are some differences between Web Sockets and HTTP?", "What is the difference between Node.js and Express.js?", "What is RESTful routing?", "What is the role of web application framework, like Flask?"], "flask": ["How do you collect data from the query string using Flask?", "How do you collect data from the body of the request using Flask?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "You can pass information to Flask either as a parameter in a route URL", "How do you collect data from a URL parameter using Flask?", "What is the role of web application framework, like Flask?", "What is the session object in Flask?", "What exactly does Flask's `jsonify()` do?"], "help": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is the role of web application framework, like Flask?", "What is Webpack?"], "define": ["What is the role of web application framework, like Flask?"], "respond": ["What is the role of web application framework, like Flask?"], "route": ["You can pass information to Flask either as a parameter in a route URL", "What are some ways to decide which code to test?", "What is RESTful routing?"], "'/foods/pretzel": ["You can pass information to Flask either as a parameter in a route URL"], "param": ["You can pass information to Flask either as a parameter in a route URL"], "'foods": ["You can pass information to Flask either as a parameter in a route URL"], "type=pretzel": ["You can pass information to Flask either as a parameter in a route URL"], "choose": ["You can pass information to Flask either as a parameter in a route URL"], "better": ["You can pass information to Flask either as a parameter in a route URL", "What are some advantages/disadvantages to using Linked Lists versus arrays?"], "fit": ["You can pass information to Flask either as a parameter in a route URL"], "exact": ["You can pass information to Flask either as a parameter in a route URL"], "depends": ["You can pass information to Flask either as a parameter in a route URL"], "situation": ["You can pass information to Flask either as a parameter in a route URL"], "generally": ["You can pass information to Flask either as a parameter in a route URL"], "parameters": ["You can pass information to Flask either as a parameter in a route URL", "What is a reducer?"], "describing": ["You can pass information to Flask either as a parameter in a route URL"], "vs": ["You can pass information to Flask either as a parameter in a route URL"], "case": ["You can pass information to Flask either as a parameter in a route URL", "What is an action?"], "i": ["You can pass information to Flask either as a parameter in a route URL", "What is CSRF? What is the purpose of the CSRF token?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "/foods/pretzel": ["You can pass information to Flask either as a parameter in a route URL"], "decribing": ["You can pass information to Flask either as a parameter in a route URL"], "pretzel": ["You can pass information to Flask either as a parameter in a route URL", "How do you collect data from a URL parameter using Flask?"], "type=salty": ["You can pass information to Flask either as a parameter in a route URL"], "type=sugar": ["You can pass information to Flask either as a parameter in a route URL"], "collect": ["How do you collect data from the query string using Flask?", "How do you collect data from a URL parameter using Flask?", "How do you collect data from the body of the request using Flask?"], "specify": ["How do you collect data from a URL parameter using Flask?"], "app.route": ["How do you collect data from the query string using Flask?", "How do you collect data from a URL parameter using Flask?", "How do you collect data from the body of the request using Flask?"], "paramater": ["How do you collect data from a URL parameter using Flask?"], "here": ["How do you collect data from a URL parameter using Flask?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "'/foods/": ["How do you collect data from a URL parameter using Flask?"], "food": ["How do you collect data from a URL parameter using Flask?"], "def": ["How do you collect data from the query string using Flask?", "How do you collect data from a URL parameter using Flask?", "How do you collect data from the body of the request using Flask?"], "grocery": ["How do you collect data from the query string using Flask?", "How do you collect data from a URL parameter using Flask?", "How do you collect data from the body of the request using Flask?"], "x": ["How do you collect data from the query string using Flask?", "How do you collect data from a URL parameter using Flask?", "How do you collect data from the body of the request using Flask?"], "request.args": ["How do you collect data from the query string using Flask?"], "'/foods": ["How do you collect data from the query string using Flask?", "How do you collect data from the body of the request using Flask?"], "request.args.get": ["How do you collect data from the query string using Flask?"], "'type": ["How do you collect data from the query string using Flask?", "How do you collect data from the body of the request using Flask?"], "form": ["What are two ways of handling redirects with React Router? When would you use each?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "How do you collect data from the body of the request using Flask?", "What is a controlled component?", "What is CSRF? What is the purpose of the CSRF token?", "What are some ways of managing asynchronous code in JavaScript?"], "request.form": ["How do you collect data from the body of the request using Flask?"], "request.form.get": ["How do you collect data from the body of the request using Flask?"], "cookie": ["What is a cookie and what kinds of things are they commonly used for?", "How can you implement authentication with a JWT?  Describe how it works at a high level."], "commonly": ["What is the purpose of `form.hidden_tag()`?", "What is a cookie and what kinds of things are they commonly used for?", "What are trees used for?"], "stores": ["What is a cookie and what kinds of things are they commonly used for?"], "client": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What are some differences between Web Sockets and HTTP?", "What are some differences between client side and server side routing?", "What is the session object in Flask?", "What is the purpose of the React Router?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a cookie and what kinds of things are they commonly used for?"], "back": ["What are two ways of handling redirects with React Router? When would you use each?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is one way encryption?", "What does `RETURNING` do in SQL? When would you use it?", "What is a cookie and what kinds of things are they commonly used for?"], "go": ["What is CSRF? What is the purpose of the CSRF token?", "What is a cookie and what kinds of things are they commonly used for?"], "session": ["What is a cookie and what kinds of things are they commonly used for?", "What is the session object in Flask?"], "resume": ["What is a cookie and what kinds of things are they commonly used for?"], "left": ["What is Redux? Why would you use it?", "What is a cookie and what kinds of things are they commonly used for?", "What is the difference between a binary search tree and binary tree?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "built": ["Explain how hash tables work", "What is the session object in Flask?"], "remember": ["What is the session object in Flask?"], "wihout": ["What is the session object in Flask?"], "encoded": ["What is the session object in Flask?"], "exactly": ["What exactly does Flask's `jsonify()` do?", "What is the value of using JSONSchema for validation?"], "jsonify": ["What exactly does Flask's `jsonify()` do?"], "serializeable": ["What exactly does Flask's `jsonify()` do?"], "postgresql": ["What is the difference between SQL and PostgreSQL?", "What is PostgreSQL?"], "database": ["In `psql`, how do you connect to a database?", "What is a mock? What are some things you would mock?", "What is PostgreSQL?"], "management": ["What is PostgreSQL?"], "relational": ["What is PostgreSQL?"], "manner": ["What is an ORM? What do they do?", "What is PostgreSQL?"], "sql": ["What is an ORM? What do they do?", "What does `RETURNING` do in SQL? When would you use it?", "What is the difference between SQL and PostgreSQL?"], "extends": ["What is the difference between SQL and PostgreSQL?"], "psql": ["In `psql`, how do you connect to a database?"], "\\c": ["In `psql`, how do you connect to a database?"], "databasename": ["In `psql`, how do you connect to a database?"], "having": ["What is the difference between `HAVING` and `WHERE`?"], "where": ["What is a queue? Where and how are they used?", "What is a stack? Where and how are they used?", "What is the difference between `HAVING` and `WHERE`?"], "applied": ["What is the difference between `HAVING` and `WHERE`?"], "groups": ["What is the difference between `HAVING` and `WHERE`?"], "applies": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is the difference between `HAVING` and `WHERE`?"], "rows": ["What is the difference between `HAVING` and `WHERE`?"], "clause": ["What is the difference between `HAVING` and `WHERE`?"], "filters": ["What is the difference between `HAVING` and `WHERE`?"], "grouped": ["What is the difference between `HAVING` and `WHERE`?"], "filter": ["What is the difference between `HAVING` and `WHERE`?"], "inner": ["What are some ways of managing asynchronous code in JavaScript?", "What is the difference between an `INNER` and `OUTER` join?"], "outer": ["What is the difference between an `INNER` and `OUTER` join?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "join": ["What is the difference between an `INNER` and `OUTER` join?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "middle": ["What is the difference between an `INNER` and `OUTER` join?", "What is middleware?"], "venn": ["What is the difference between an `INNER` and `OUTER` join?"], "diagram": ["What is the difference between an `INNER` and `OUTER` join?"], "occurs": ["What is the difference between an `INNER` and `OUTER` join?"], "tables": ["Explain how hash tables work", "What is the difference between an `INNER` and `OUTER` join?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "name": ["What is RESTful routing?", "What is the difference between an `INNER` and `OUTER` join?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "table": ["Explain how hash tables work", "What is the difference between an `INNER` and `OUTER` join?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "connected": ["How does data flow in a React/Redux application?", "What is the difference between an `INNER` and `OUTER` join?", "What is the purpose of the `connect` function? What does it return?"], "workplace": ["What is the difference between an `INNER` and `OUTER` join?"], "unemployed": ["What is the difference between an `INNER` and `OUTER` join?"], "wo": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is an environment variable and what are they used for?", "What is the difference between an `INNER` and `OUTER` join?"], "show": ["What is the difference between an `INNER` and `OUTER` join?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "right": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is the difference between a binary search tree and binary tree?", "What is Redux? Why would you use it?"], "person": ["What are some differences between Web Sockets and HTTP?", "What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "joins": ["What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "full": ["What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "shown": ["What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "whether": ["What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "shows": ["What is the difference between a `LEFT OUTER JOIN` and `RIGHT OUTER` join?"], "orm": ["What is an ORM? What do they do?"], "object-relational": ["What is an ORM? What do they do?"], "mapping": ["What is an ORM? What do they do?", "What are graphs used for?"], "systems": ["What is an ORM? What do they do?", "What are trees used for?", "What are some differences between Web Sockets and HTTP?"], "sqlalchemy": ["What is an ORM? What do they do?"], "synchronous": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?"], "keep": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is an environment variable and what are they used for?"], "private": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "secret": ["What are some differences between making HTTP requests using AJAX and from the server side using a library like `requests`?", "What is a JWT?", "What is the signature portion of the JWT?  What does it do?", "What is an environment variable and what are they used for?", "How can you implement authentication with a JWT?  Describe how it works at a high level."], "csrf": ["What is the purpose of `form.hidden_tag()`?", "What is CSRF? What is the purpose of the CSRF token?"], "token": ["What is the purpose of `form.hidden_tag()`?", "What is a JWT?", "What is the signature portion of the JWT?  What does it do?", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is CSRF? What is the purpose of the CSRF token?"], "cross-site": ["What is CSRF? What is the purpose of the CSRF token?"], "forgery": ["What is CSRF? What is the purpose of the CSRF token?"], "posted": ["What is CSRF? What is the purpose of the CSRF token?"], "facebook": ["What is CSRF? What is the purpose of the CSRF token?"], "delete": ["What is CSRF? What is the purpose of the CSRF token?", "What does idempotent mean? Which HTTP verbs are idempotent?"], "technically": ["What is CSRF? What is the purpose of the CSRF token?"], "prove": ["What is CSRF? What is the purpose of the CSRF token?"], "item": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is CSRF? What is the purpose of the CSRF token?", "What are two ways of handling redirects with React Router? When would you use each?"], "proves": ["What is CSRF? What is the purpose of the CSRF token?"], "say": ["What is CSRF? What is the purpose of the CSRF token?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "form.hidden_tag": ["What is the purpose of `form.hidden_tag()`?"], "render": ["What is React? When and why would you use it?", "What is the purpose of `form.hidden_tag()`?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "How is a Component created in React?", "When would you use `componentDidUpdate`?", "What in React makes the `render` function run?", "What does the `mapStateToProps` function do?", "What is the difference between Component and PureComponent?", "When would you use `componentDidMount`?"], "hidden": ["What is the purpose of `form.hidden_tag()`?"], "tags": ["What is the purpose of `form.hidden_tag()`?"], "values": ["Explain how hash tables work", "What is the purpose of `form.hidden_tag()`?", "What happens if two values hash to the same index?", "What does the `mapDispatchToProps` function do?", "What is an adjacency list?"], "passed": ["How does data flow in a React application?", "What is the purpose of `form.hidden_tag()`?", "What are some difference between state and props?"], "field": ["What is the purpose of `form.hidden_tag()`?", "What is a controlled component?"], "wtforms": ["What is the purpose of `form.hidden_tag()`?"], "restful": ["What is RESTful routing?"], "actually": ["What is RESTful routing?", "What is the purpose of the React Router?"], "designing": ["What is RESTful routing?"], "routes": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What are some differences between client side and server side routing?", "What is RESTful routing?", "What is middleware?"], "conform": ["What is RESTful routing?"], "standards": ["What is RESTful routing?"], "around": ["What is TDD? What are some benefits and drawbacks?", "Compare and contrast unit, integration and end-to-end tests.", "What is RESTful routing?", "What is continuous integration?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?"], "resources": ["What is a resource?", "What is RESTful routing?"], "architectural": ["What is RESTful routing?"], "style": ["What is RESTful routing?"], "provides": ["What is RESTful routing?"], "constraints": ["What is RESTful routing?"], "services": ["What is RESTful routing?"], "naming": ["What is RESTful routing?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "convention": ["What is RESTful routing?"], "verbs": ["What is a resource?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What is RESTful routing?"], "dictate": ["What is RESTful routing?"], "/users": ["What is RESTful routing?"], "/users/add": ["What is RESTful routing?"], "oop": ["What is a resource?"], "type": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What are propTypes?", "What is an action?", "What is redux-thunk and why would you use it?", "What is a resource?"], "associated": ["What is a resource?"], "relationship": ["What is a resource?"], "standard": ["What is a resource?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "submitted": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?"], "creates": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?"], "simply": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?"], "taking": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?"], "provided": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?", "What is the component life cycle?"], "pleases": ["When building a JSON API why do you not include routes to render a form that when submitted creates a new user?"], "generated": ["What is a JWT?", "When building a JSON API why do you not include routes to render a form that when submitted creates a new user?"], "idempotent": ["What does idempotent mean? Which HTTP verbs are idempotent?"], "mean": ["What does idempotent mean? Which HTTP verbs are idempotent?"], "which": ["What does idempotent mean? Which HTTP verbs are idempotent?"], "state": ["What is React? When and why would you use it?", "How does data flow in a React/Redux application?", "What are some difference between state and props?", "What are React hooks?", "What is the difference between Component and PureComponent?", "What is a store?", "What is a controlled component?", "What is an action?", "What is an uncontrolled component?", "What are three features of the Redux developer tool in Chrome?", "What is a reducer?", "What does the `mapStateToProps` function do?", "What is Redux? Why would you use it?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What are some ways of managing asynchronous code in JavaScript?", "What is the purpose of the `connect` function? What does it return?"], "changes": ["What is React? When and why would you use it?", "What does the `mapStateToProps` function do?", "What does idempotent mean? Which HTTP verbs are idempotent?", "What is a controlled component?"], "ptach": ["What does idempotent mean? Which HTTP verbs are idempotent?"], "put": ["If a JWT is intercepted, can the attacker see what's inside the payload?", "What is the difference between PUT and PATCH?"], "patch": ["What is the difference between PUT and PATCH?"], "update": ["When would you use `componentDidUpdate`?", "What is the component life cycle?", "What is the difference between PUT and PATCH?"], "entire": ["Compare and contrast unit, integration and end-to-end tests.", "What is an environment variable and what are they used for?", "What is a mock? What are some things you would mock?", "What is the difference between PUT and PATCH?"], "encryption": ["What is one way encryption?"], "result": ["What is the signature portion of the JWT?  What does it do?", "What is one way encryption?", "What is the purpose of a `salt` when hashing a password?"], "decrypted": ["What is one way encryption?"], "original": ["What is one way encryption?"], "salt": ["What is the purpose of a `salt` when hashing a password?"], "hashing": ["Explain how hash tables work", "What is the signature portion of the JWT?  What does it do?", "What is the purpose of a `salt` when hashing a password?"], "password": ["What is the purpose of a `salt` when hashing a password?", "What is the purpose of the Bcrypt module?"], "random": ["What is the purpose of a `salt` when hashing a password?"], "characters": ["What is the purpose of a `salt` when hashing a password?"], "introduced": ["What is the purpose of a `salt` when hashing a password?"], "hashed": ["What is the purpose of a `salt` when hashing a password?"], "differently": ["What is the purpose of a `salt` when hashing a password?"], "randomly": ["What is the purpose of a `salt` when hashing a password?"], "decrypt": ["What is the purpose of a `salt` when hashing a password?"], "spend": ["What is the purpose of a `salt` when hashing a password?"], "lot": ["What is the value of using JSONSchema for validation?", "What are some ways to decide which code to test?", "What is the purpose of a `salt` when hashing a password?"], "generating": ["What is the purpose of a `salt` when hashing a password?"], "words": ["What is the purpose of a `salt` when hashing a password?"], "encrypting": ["What is the purpose of a `salt` when hashing a password?"], "happen": ["What is a Promise?", "What are some ways of managing asynchronous code in JavaScript?", "What is the purpose of a `salt` when hashing a password?", "What is an uncontrolled component?"], "solution": ["What is the purpose of a `salt` when hashing a password?"], "passwords": ["What is the purpose of a `salt` when hashing a password?", "What is the purpose of the Bcrypt module?"], "encrypted": ["If a JWT is intercepted, can the attacker see what's inside the payload?", "What is the purpose of a `salt` when hashing a password?"], "bcrypt": ["What is the purpose of the Bcrypt module?"], "module": ["What is a mock? What are some things you would mock?", "What is the purpose of the Bcrypt module?"], "easy": ["What is React? When and why would you use it?", "What is the purpose of the Bcrypt module?"], "encrypt": ["What is the purpose of the Bcrypt module?"], "hash": ["Explain how hash tables work", "What happens if two values hash to the same index?", "What is the signature portion of the JWT?  What does it do?", "What is the purpose of the Bcrypt module?"], "authentication": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the difference between authorization and authentication?"], "process": ["What is the difference between authorization and authentication?", "What is TDD? What are some benefits and drawbacks?"], "verifying": ["What is the difference between authorization and authentication?"], "authenticate": ["What is the difference between authorization and authentication?"], "someones": ["What is the difference between authorization and authentication?"], "login": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the difference between authorization and authentication?"], "profile": ["What is the difference between authorization and authentication?"], "complexities": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "large": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What is continuous integration?"], "codebase": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "warbler": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "comments": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "comes": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "knows": ["How is a Component created in React?", "What is the purpose of the `key` prop when rendering a list of components?", "What are some ways to manage the complexities of a large codebase, like Warbler?", "What is the signature portion of the JWT?  What does it do?", "How can you implement authentication with a JWT?  Describe how it works at a high level."], "organize": ["What are some ways to manage the complexities of a large codebase, like Warbler?", "What are trees used for?"], "sections": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "organizing": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "edit": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "edits": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "docstrings": ["What are some ways to manage the complexities of a large codebase, like Warbler?"], "managing": ["What are some ways of managing asynchronous code in JavaScript?", "What is the call stack?"], "avoid": ["What are some ways of managing asynchronous code in JavaScript?"], "nested": ["What are some ways of managing asynchronous code in JavaScript?"], "callbacks": ["What is the error-first callback pattern?", "What are some ways of managing asynchronous code in JavaScript?"], ".then": ["What are some ways of managing asynchronous code in JavaScript?"], ".catch": ["What are some ways of managing asynchronous code in JavaScript?"], "resolved": ["What is a Promise?", "What are some ways of managing asynchronous code in JavaScript?"], "rejected": ["What is a Promise?", "What are some ways of managing asynchronous code in JavaScript?"], "multiple": ["Explain how hash tables work", "What happens if two values hash to the same index?", "What are some differences between Web Sockets and HTTP?", "What is an environment variable and what are they used for?", "What is redux-thunk and why would you use it?", "What are some ways of managing asynchronous code in JavaScript?"], "run": ["What does the `mapStateToProps` function do?", "What is the difference between Node.js and Express.js?", "What does the `next` function do?", "When would you use `componentDidUpdate`?", "What are the differences between an async function and a regular function?", "What in React makes the `render` function run?", "What is the purpose of `componentWillUnmount`?", "When would you use `componentDidMount`?", "What are some ways of managing asynchronous code in JavaScript?", "What is middleware?"], "possibility": ["What are some ways of managing asynchronous code in JavaScript?"], "catch": ["What are some ways of managing asynchronous code in JavaScript?"], "extract": ["What are some ways of managing asynchronous code in JavaScript?"], "reason": ["What is Redux? Why would you use it?", "What are some ways of managing asynchronous code in JavaScript?"], "caught": ["What are some ways of managing asynchronous code in JavaScript?"], "guarantee": ["What is a Promise?"], "future": ["What is a Promise?"], "guaranteed": ["What is a Promise?"], "point": ["What is a Promise?"], "regular": ["What are the differences between an async function and a regular function?"], "supports": ["What are the differences between an async function and a regular function?"], "asynchronously": ["What are the differences between an async function and a regular function?"], "synchronously": ["What are the differences between an async function and a regular function?"], "node.js": ["What is the difference between Node.js and Express.js?"], "express.js": ["What is the difference between Node.js and Express.js?"], "server-side": ["What is the difference between Node.js and Express.js?"], "environment": ["What is the difference between Node.js and Express.js?", "What is an environment variable and what are they used for?", "What are some differences between Web Sockets and HTTP?"], "applications": ["What is React? When and why would you use it?", "What is the difference between Node.js and Express.js?", "What is an environment variable and what are they used for?"], "error-first": ["What is the error-first callback pattern?"], "callback": ["What is the error-first callback pattern?"], "pattern": ["What is the error-first callback pattern?"], "older": ["What is the error-first callback pattern?"], "modules": ["What is the error-first callback pattern?"], "support": ["What is the error-first callback pattern?"], "middleware": ["What is redux-thunk and why would you use it?", "What does the `next` function do?", "What is middleware?"], "cycle": ["What is the difference between a tree and a graph?", "What is the component life cycle?", "What is middleware?"], "intercept": ["What is middleware?"], "modify": ["What is middleware?"], "updated": ["When would you use `componentDidUpdate`?", "What does `RETURNING` do in SQL? When would you use it?", "What is middleware?"], "next": ["What does the `next` function do?"], "succession": ["What does the `next` function do?"], "whatever": ["What does `RETURNING` do in SQL? When would you use it?"], "columns": ["What does `RETURNING` do in SQL? When would you use it?"], "deleted": ["What does `RETURNING` do in SQL? When would you use it?"], "entered": ["What does `RETURNING` do in SQL? When would you use it?"], "depending": ["What does `RETURNING` do in SQL? When would you use it?"], "taken": ["What does `RETURNING` do in SQL? When would you use it?", "What is the purpose of `componentWillUnmount`?"], "validate": ["What does `RETURNING` do in SQL? When would you use it?"], "instantiate": ["What does `RETURNING` do in SQL? When would you use it?"], "consider": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "aspects": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "getusers": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "elie": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], ".getjson": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "'https": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "//api.github.com/users/elie": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "joel": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "//api.github.com/users/joelburton": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "matt": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "//api.github.com/users/mmmaaatttttt": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "getting": ["What is a single page application?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "info": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "necessarily": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "users": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "renamed": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "elieinfo": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "performancewise": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "depend": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "starting": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "second": ["What is an action?", "What is the purpose of the `connect` function? What does it return?", "What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "third": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "rewritten": ["What are some issues with the following code? (consider all aspects: performance, structure, naming, etc)"], "jwt": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a JWT?", "What is the signature portion of the JWT?  What does it do?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "securely": ["What is a JWT?"], "transmit": ["What is a JWT?"], "three": ["What are three features of the Redux developer tool in Chrome?", "What is a JWT?"], "payload": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a JWT?", "What is the signature portion of the JWT?  What does it do?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "signature": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is a JWT?", "What is the signature portion of the JWT?  What does it do?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "metadata": ["What is a JWT?"], "actual": ["When would you use `componentDidUpdate`?", "What is a JWT?"], "signing": ["What is a JWT?"], "part": ["What is Redux? Why would you use it?", "What is a JWT?"], "tampered": ["What is a JWT?", "What is the signature portion of the JWT?  What does it do?"], "become": ["What is a JWT?"], "invalid": ["What is a JWT?"], "portion": ["What is the signature portion of the JWT?  What does it do?"], "concatenating": ["What is the signature portion of the JWT?  What does it do?"], "ensures": ["What is the signature portion of the JWT?  What does it do?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "only": ["What is the signature portion of the JWT?  What does it do?"], "tokens": ["What is the signature portion of the JWT?  What does it do?"], "intercepted": ["If a JWT is intercepted, can the attacker see what's inside the payload?"], "attacker": ["If a JWT is intercepted, can the attacker see what's inside the payload?"], "yes": ["If a JWT is intercepted, can the attacker see what's inside the payload?"], "hs256": ["If a JWT is intercepted, can the attacker see what's inside the payload?"], "so": ["What are graphs used for?", "If a JWT is intercepted, can the attacker see what's inside the payload?"], "changed": ["What are some difference between state and props?", "If a JWT is intercepted, can the attacker see what's inside the payload?", "What is the purpose of the `key` prop when rendering a list of components?"], "ensure": ["If a JWT is intercepted, can the attacker see what's inside the payload?"], "sensitive": ["If a JWT is intercepted, can the attacker see what's inside the payload?"], "implement": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "describe": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "high": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "level": ["What is Redux? Why would you use it?", "How can you implement authentication with a JWT?  Describe how it works at a high level."], "sends": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "account": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What are two ways of handling redirects with React Router? When would you use each?"], "login/creating": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "uniquely": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "save": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "somehow": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "local": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "storage": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "to": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "authenticated": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "provide": ["Compare and contrast unit, integration and end-to-end tests.", "How can you implement authentication with a JWT?  Describe how it works at a high level.", "What are propTypes?", "What are some advantages/disadvantages to using Linked Lists versus arrays?"], "specified": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What are propTypes?"], "verify": ["How can you implement authentication with a JWT?  Describe how it works at a high level.", "What is the value of using JSONSchema for validation?"], "sign": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "matches": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "presented": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "verified": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "identifier": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "figure": ["How can you implement authentication with a JWT?  Describe how it works at a high level."], "compare": ["Compare and contrast unit, integration and end-to-end tests."], "contrast": ["Compare and contrast unit, integration and end-to-end tests."], "end-to-end": ["Compare and contrast unit, integration and end-to-end tests."], "inexpensive": ["Compare and contrast unit, integration and end-to-end tests."], "consuming": ["Compare and contrast unit, integration and end-to-end tests.", "What is TDD? What are some benefits and drawbacks?"], "units": ["Compare and contrast unit, integration and end-to-end tests."], "isolation": ["Compare and contrast unit, integration and end-to-end tests.", "What is a mock? What are some things you would mock?"], "they": ["Compare and contrast unit, integration and end-to-end tests.", "What is the difference between a binary search tree and binary tree?", "What are linked lists used for?"], "least": ["Compare and contrast unit, integration and end-to-end tests."], "coverage": ["Compare and contrast unit, integration and end-to-end tests."], "maintainable": ["Compare and contrast unit, integration and end-to-end tests."], "focused": ["Compare and contrast unit, integration and end-to-end tests."], "bit": ["Compare and contrast unit, integration and end-to-end tests.", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "write": ["Compare and contrast unit, integration and end-to-end tests.", "What is JSX?"], "cover": ["Compare and contrast unit, integration and end-to-end tests."], "brittle": ["Compare and contrast unit, integration and end-to-end tests."], "experience": ["Compare and contrast unit, integration and end-to-end tests."], "complete": ["Compare and contrast unit, integration and end-to-end tests."], "quite": ["Compare and contrast unit, integration and end-to-end tests.", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "mock": ["What is a mock? What are some things you would mock?"], "fake": ["What is a mock? What are some things you would mock?"], "version": ["What is a mock? What are some things you would mock?"], "even": ["What is the value of using JSONSchema for validation?", "What is a mock? What are some things you would mock?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "mocking": ["What is a mock? What are some things you would mock?"], "completely": ["What is a mock? What are some things you would mock?"], "impure": ["What is a mock? What are some things you would mock?"], "math.random": ["What is a mock? What are some things you would mock?"], "continuous": ["What is continuous integration?"], "ci": ["What is continuous integration?"], "practice": ["What is continuous integration?"], "constantly": ["What is continuous integration?"], "deploying": ["What is continuous integration?"], "chunks": ["What is continuous integration?"], "infrequently": ["What is continuous integration?"], "quick": ["What is continuous integration?"], "tooling": ["What is continuous integration?"], "ensuring": ["What is continuous integration?"], "deployments": ["What is continuous integration?"], "occur": ["Explain how hash tables work", "What is continuous integration?"], "accessible": ["What does the `mapStateToProps` function do?", "What is an environment variable and what are they used for?", "What does the `mapDispatchToProps` function do?"], "just": ["What is an environment variable and what are they used for?"], "global": ["What is an environment variable and what are they used for?"], "accessed": ["What is an environment variable and what are they used for?"], "bring": ["What is an environment variable and what are they used for?"], "seen": ["What is an environment variable and what are they used for?"], ".env": ["What is an environment variable and what are they used for?"], ".gitignore": ["What is an environment variable and what are they used for?"], "everywhere": ["What are graphs used for?", "What is an environment variable and what are they used for?"], "tdd": ["What is TDD? What are some benefits and drawbacks?"], "benefits": ["What is TDD? What are some benefits and drawbacks?"], "drawbacks": ["What is TDD? What are some benefits and drawbacks?"], "driven": ["What is TDD? What are some benefits and drawbacks?"], "development": ["What is TDD? What are some benefits and drawbacks?"], "philosophy": ["What is TDD? What are some benefits and drawbacks?"], "centered": ["What is TDD? What are some benefits and drawbacks?"], "seeing": ["What are three features of the Redux developer tool in Chrome?", "What is TDD? What are some benefits and drawbacks?"], "fail": ["What is TDD? What are some benefits and drawbacks?"], "necessary": ["What is TDD? What are some benefits and drawbacks?"], "repeating/refactoring": ["What is TDD? What are some benefits and drawbacks?"], "solid": ["What is TDD? What are some benefits and drawbacks?"], "suite": ["What is TDD? What are some benefits and drawbacks?"], "beginning": ["What are some advantages/disadvantages to using Linked Lists versus arrays?", "What is TDD? What are some benefits and drawbacks?", "What are linked lists used for?"], "inefficient": ["What is TDD? What are some benefits and drawbacks?"], "jsonschema": ["What is the value of using JSONSchema for validation?"], "validation": ["What is the value of using JSONSchema for validation?", "What are propTypes?"], "scheme": ["What is the value of using JSONSchema for validation?"], "coded": ["What is the value of using JSONSchema for validation?"], "15": ["What is the value of using JSONSchema for validation?"], "inputs": ["What is the value of using JSONSchema for validation?", "What is an uncontrolled component?"], "if-else": ["What is the value of using JSONSchema for validation?"], "statements": ["What is the value of using JSONSchema for validation?"], "unreadable": ["What is the value of using JSONSchema for validation?"], "standardization": ["What is the value of using JSONSchema for validation?"], "couple": ["What is the value of using JSONSchema for validation?"], "decide": ["What are some ways to decide which code to test?"], "line": ["What are some ways to decide which code to test?"], "places": ["What are some ways to decide which code to test?"], "target": ["What are some ways to decide which code to test?"], "complex": ["What are some ways to decide which code to test?"], "likely": ["What are some ways to decide which code to test?"], "bugs": ["What are some ways to decide which code to test?"], "inherent": ["What are some ways to decide which code to test?"], "hit": ["What are some ways to decide which code to test?", "What are two ways of handling redirects with React Router? When would you use each?", "What is the purpose of the `key` prop when rendering a list of components?"], "beneficial": ["What are some ways to decide which code to test?"], "sockets": ["What are some differences between Web Sockets and HTTP?"], "socket": ["What are some differences between Web Sockets and HTTP?"], "connection": ["What are some differences between Web Sockets and HTTP?"], "stay": ["What are some differences between Web Sockets and HTTP?"], "open": ["What are some differences between Web Sockets and HTTP?"], "place": ["What is the purpose of `componentWillUnmount`?", "When would you use `componentDidMount`?", "What are some differences between Web Sockets and HTTP?", "What is a store?"], "other": ["What are some differences between Web Sockets and HTTP?"], "chat": ["What are some differences between Web Sockets and HTTP?"], "good": ["Explain how hash tables work", "What is a heap? What are they good for?", "What are some differences between Web Sockets and HTTP?"], "sort": ["What are some differences between Web Sockets and HTTP?"], "people": ["What are some differences between Web Sockets and HTTP?"], "working": ["What are some differences between Web Sockets and HTTP?"], "together": ["What are some differences between Web Sockets and HTTP?"], "docs": ["What are some differences between Web Sockets and HTTP?"], "doc": ["What are some differences between Web Sockets and HTTP?"], "real": ["What are some differences between Web Sockets and HTTP?"], "maintain": ["What is Redux? Why would you use it?", "What are some differences between Web Sockets and HTTP?"], "overhead": ["What are some differences between Web Sockets and HTTP?"], "did": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "prefer": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "express": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "think": ["How does data flow in a React application?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "totally": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "opinion": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "minimalist": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "setup": ["What is Redux? Why would you use it?", "Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "sometimes": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "nature": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "challenging": ["Did you prefer using Flask over Express? Why or why not (there is no right answer here - we want to see how you think about technology)?"], "react": ["What are two ways of handling redirects with React Router? When would you use each?", "What are React hooks?", "What is the purpose of the `key` prop when rendering a list of components?", "What are two different ways to handle page-not-found user experiences using React Router?", "What in React makes the `render` function run?", "What does the `mapStateToProps` function do?", "How does data flow in a React/Redux application?", "What is React? When and why would you use it?", "How is a Component created in React?", "What is the purpose of the React Router?", "What is an uncontrolled component?", "What is Redux? Why would you use it?", "What is the purpose of the `connect` function? What does it return?", "What is a React `ref` and when might you use them?", "What is a controlled component?", "What is the purpose of the `<Provider>` component?", "What are some differences between client side and server side routing?", "How does data flow in a React application?", "What is JSX?"], "build": ["What is React? When and why would you use it?", "What are linked lists used for?"], "reusable": ["What is React? When and why would you use it?"], "reused": ["What is React? When and why would you use it?"], "re-rendering": ["What is React? When and why would you use it?", "What are some differences between client side and server side routing?"], "babel": ["What is Babel?", "What is JSX?"], "transpiler": ["What is Babel?"], "covert": ["What is Babel?"], "jsx": ["What is Babel?", "What is JSX?"], "read": ["What is Babel?"], "webpack": ["What is Webpack?"], "utility": ["What is Webpack?"], "package": ["What is Webpack?"], "css/images/js": ["What is Webpack?"], "helps": ["What is Webpack?"], "reduce": ["What is Webpack?"], "hot": ["What is Webpack?"], "reloading": ["What is Webpack?"], "although": ["What is JSX?"], "converted": ["What is JSX?"], "component": ["What are some difference between state and props?", "What is the purpose of the `key` prop when rendering a list of components?", "What are two different ways to handle page-not-found user experiences using React Router?", "When would you use `componentDidUpdate`?", "What in React makes the `render` function run?", "What does the `mapStateToProps` function do?", "How is a Component created in React?", "What does the `mapDispatchToProps` function do?", "What is the purpose of the React Router?", "What is an uncontrolled component?", "What is Redux? Why would you use it?", "When would you use `componentDidMount`?", "What is the purpose of the `connect` function? What does it return?", "What is a controlled component?", "What is the component life cycle?", "What is the difference between Component and PureComponent?", "What is the purpose of the `<Provider>` component?", "What are some differences between client side and server side routing?", "What is a stateless functional component?", "How does data flow in a React application?", "What is the purpose of `componentWillUnmount`?"], "extended": ["How is a Component created in React?"], "react.component": ["How is a Component created in React?"], "props": ["What are some difference between state and props?", "What are propTypes?", "How does data flow in a React application?", "What does the `mapStateToProps` function do?", "What is the difference between Component and PureComponent?", "What is the purpose of the `connect` function? What does it return?"], "mutable": ["What are some difference between state and props?"], "re-rendered": ["What are some difference between state and props?"], "child": ["What is Redux? Why would you use it?", "What are some difference between state and props?", "What is the difference between a tree and a graph?"], "children": ["What is a heap? What are they good for?", "What are some difference between state and props?"], "controlled": ["What is a controlled component?"], "text": ["What is a controlled component?"], "control": ["What is a controlled component?"], "aware": ["What is a controlled component?", "What is an uncontrolled component?"], "compared": ["What is a controlled component?"], "uncontrolled": ["When would you use `componentDidUpdate`?", "What is an uncontrolled component?"], "uncommon": ["What is an uncontrolled component?"], "3rd": ["What is an uncontrolled component?"], "party": ["What is an uncontrolled component?"], "uploading": ["What is an uncontrolled component?"], "prop": ["What is the purpose of the `key` prop when rendering a list of components?", "What are some differences between client side and server side routing?", "What are propTypes?", "Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What is Redux? Why would you use it?", "What is the purpose of the `<Provider>` component?"], "rendering": ["Why is using an array index a poor choice for a `key` prop when rendering a list of components?", "What is the purpose of the `key` prop when rendering a list of components?"], "ones": ["What is the purpose of the `key` prop when rendering a list of components?"], "re-render": ["What is the purpose of the `key` prop when rendering a list of components?"], "poor": ["Why is using an array index a poor choice for a `key` prop when rendering a list of components?"], "choice": ["Why is using an array index a poor choice for a `key` prop when rendering a list of components?"], "stable": ["Why is using an array index a poor choice for a `key` prop when rendering a list of components?"], "mutate": ["Why is using an array index a poor choice for a `key` prop when rendering a list of components?"], "indices": ["Why is using an array index a poor choice for a `key` prop when rendering a list of components?"], "shift": ["Why is using an array index a poor choice for a `key` prop when rendering a list of components?"], "flow": ["How does data flow in a React application?", "How does data flow in a React/Redux application?"], "tree": ["How does data flow in a React application?", "What is the difference between a binary search tree and binary tree?", "What are three features of the Redux developer tool in Chrome?", "What is the difference between a tree and a graph?"], "main": ["How does data flow in a React application?"], "top": ["How does data flow in a React application?"], "comprised": ["How does data flow in a React application?"], "flows": ["How does data flow in a React application?"], "whenever": ["What is Redux? Why would you use it?", "What is redux-thunk and why would you use it?", "What in React makes the `render` function run?"], "rendered": ["What in React makes the `render` function run?"], "setstate": ["What in React makes the `render` function run?"], "life": ["What is the component life cycle?"], "stages": ["What is the component life cycle?"], "goes": ["What is the component life cycle?"], "mount": ["What is the component life cycle?"], "unmount": ["What is the component life cycle?"], "throughout": ["What is the component life cycle?"], "lifecycle": ["What are React hooks?", "What is the component life cycle?"], "tap": ["What is a React `ref` and when might you use them?", "What is the component life cycle?"], "certain": ["What does the `mapDispatchToProps` function do?", "Explain how hash tables work", "What is a React `ref` and when might you use them?", "What is the component life cycle?"], "componentdidmount": ["When would you use `componentDidMount`?"], "constructor": ["When would you use `componentDidMount`?"], "runs": ["When would you use `componentDidUpdate`?", "What does the `mapStateToProps` function do?", "When would you use `componentDidMount`?", "What is an action?"], "timers": ["When would you use `componentDidMount`?", "What is the purpose of `componentWillUnmount`?"], "componentdidupdate": ["When would you use `componentDidUpdate`?"], "localstorage": ["When would you use `componentDidUpdate`?"], "recent": ["When would you use `componentDidUpdate`?"], "auto-saving": ["When would you use `componentDidUpdate`?"], "updating": ["When would you use `componentDidUpdate`?"], "componentwillunmount": ["What is the purpose of `componentWillUnmount`?"], "clean": ["What is the purpose of `componentWillUnmount`?"], "invalidating": ["What is the purpose of `componentWillUnmount`?"], "canceling": ["What is the purpose of `componentWillUnmount`?"], "removing": ["What is the purpose of `componentWillUnmount`?"], "handlers": ["What is the purpose of `componentWillUnmount`?"], "cleaning": ["What is the purpose of `componentWillUnmount`?"], "subscriptions": ["What is the purpose of `componentWillUnmount`?"], "client-side": ["What is the purpose of the React Router?"], "trick": ["What is the purpose of the React Router?"], "thinking": ["What is the purpose of the React Router?"], "pages": ["What is the purpose of the React Router?"], "reality": ["What is the purpose of the React Router?"], "based": ["What are some differences between client side and server side routing?", "What is a single page application?", "What is a reducer?", "What is the purpose of the React Router?"], "app": ["What is a single page application?", "What is the purpose of the `<Provider>` component?"], "re-renders": ["What is a single page application?"], "content": ["What are some differences between client side and server side routing?", "What is a single page application?"], "navigation": ["What is a single page application?"], "refreshed": ["What is a single page application?"], "redirect": ["What are some differences between client side and server side routing?", "What are two ways of handling redirects with React Router? When would you use each?"], "redirection": ["What are some differences between client side and server side routing?", "What are two different ways to handle page-not-found user experiences using React Router?"], "this.props.history.push": ["What are some differences between client side and server side routing?", "What are two ways of handling redirects with React Router? When would you use each?"], "add": ["What are some differences between client side and server side routing?"], "gone": ["What are some differences between client side and server side routing?"], "replacing": ["What are some differences between client side and server side routing?"], "handling": ["What are two ways of handling redirects with React Router? When would you use each?"], "redirects": ["What are two ways of handling redirects with React Router? When would you use each?"], "unauthorized": ["What are two ways of handling redirects with React Router? When would you use each?"], "submission": ["What are two ways of handling redirects with React Router? When would you use each?"], "buying": ["What are two ways of handling redirects with React Router? When would you use each?"], "mind": ["What are two ways of handling redirects with React Router? When would you use each?"], "page-not-found": ["What are two different ways to handle page-not-found user experiences using React Router?"], "experiences": ["What are two different ways to handle page-not-found user experiences using React Router?"], "message": ["What are two different ways to handle page-not-found user experiences using React Router?"], "screen": ["What are two different ways to handle page-not-found user experiences using React Router?"], "saying": ["What are two different ways to handle page-not-found user experiences using React Router?"], "perhaps": ["What are two different ways to handle page-not-found user experiences using React Router?"], "general": ["How does data flow in a React/Redux application?", "What are two different ways to handle page-not-found user experiences using React Router?"], "errorhandler": ["What are two different ways to handle page-not-found user experiences using React Router?"], "redux": ["What is the purpose of the `connect` function? What does it return?", "What is a store?", "What are three features of the Redux developer tool in Chrome?", "What does the `mapStateToProps` function do?", "What is Redux? Why would you use it?", "How does data flow in a React/Redux application?", "What is the purpose of the `<Provider>` component?"], "shared": ["What is Redux? Why would you use it?"], "context": ["What is Redux? Why would you use it?"], "kept": ["What is Redux? Why would you use it?"], "highly": ["What is Redux? Why would you use it?"], "purely": ["What is Redux? Why would you use it?"], "hierarchy": ["What is Redux? Why would you use it?", "What are trees used for?"], "levels": ["What is Redux? Why would you use it?"], "deep": ["What is Redux? Why would you use it?"], "bottom": ["What is Redux? Why would you use it?"], "eliminate": ["What is Redux? Why would you use it?"], "problem": ["What is Redux? Why would you use it?"], "ton": ["What is Redux? Why would you use it?"], "drilling": ["What is Redux? Why would you use it?"], "sake": ["What is Redux? Why would you use it?"], "keeps": ["What is Redux? Why would you use it?"], "clearer": ["What does the `mapDispatchToProps` function do?", "What is Redux? Why would you use it?"], "features": ["What are three features of the Redux developer tool in Chrome?"], "developer": ["What are three features of the Redux developer tool in Chrome?"], "tool": ["What are three features of the Redux developer tool in Chrome?"], "chrome": ["What are three features of the Redux developer tool in Chrome?"], "viewing": ["What are three features of the Redux developer tool in Chrome?"], "reducers": ["What are three features of the Redux developer tool in Chrome?"], "skipping/jumping": ["What are three features of the Redux developer tool in Chrome?"], "centralized": ["What is a store?"], "reducer": ["What is a reducer?", "What is an action?"], "pure": ["What is a reducer?"], "dispatch": ["What does the `mapDispatchToProps` function do?", "What is an action?", "What is the purpose of the `connect` function? What does it return?"], "redux-thunk": ["What is an action?", "What is redux-thunk and why would you use it?"], "dispatched": ["What is an action?", "What is redux-thunk and why would you use it?"], "creator": ["What is an action creator?"], "react/redux": ["How does data flow in a React/Redux application?"], "movement": ["How does data flow in a React/Redux application?"], "sibling": ["How does data flow in a React/Redux application?"], "flowing": ["How does data flow in a React/Redux application?"], "may": ["How does data flow in a React/Redux application?"], "provider": ["What is the purpose of the `<Provider>` component?"], "brought": ["What is the purpose of the `<Provider>` component?"], "wraps": ["What is the purpose of the `<Provider>` component?"], "takes": ["What does the `mapStateToProps` function do?", "What does the `mapDispatchToProps` function do?", "What is the purpose of the `<Provider>` component?"], "essesentially": ["What is the purpose of the `<Provider>` component?"], "connecting": ["What is an adjacency list?", "What is the purpose of the `<Provider>` component?"], "immediately": ["What is redux-thunk and why would you use it?", "What is the purpose of the `connect` function? What does it return?"], "invoked": ["What is the purpose of the `connect` function? What does it return?"], "mapstatetoprops": ["What does the `mapStateToProps` function do?"], "that": ["What does the `mapStateToProps` function do?"], "determines": ["What does the `mapStateToProps` function do?"], "receiving": ["What does the `mapStateToProps` function do?"], "mapdispatchtoprops": ["What does the `mapDispatchToProps` function do?"], "dipatch": ["What does the `mapDispatchToProps` function do?"], "limits": ["What does the `mapDispatchToProps` function do?"], "ref": ["What is a React `ref` and when might you use them?"], "refs": ["What is a React `ref` and when might you use them?"], "nice": ["What is a React `ref` and when might you use them?"], "direct": ["What is a React `ref` and when might you use them?"], "manipulation": ["What is a React `ref` and when might you use them?"], "focusing": ["What is a React `ref` and when might you use them?"], "stateless": ["What is a stateless functional component?"], "functional": ["What is a stateless functional component?", "What are React hooks?"], "es2015": ["What is a stateless functional component?"], "hooks": ["What are React hooks?"], "newer": ["What are React hooks?"], "introduce": ["What are React hooks?"], "proptypes": ["What are propTypes?"], "light": ["What are propTypes?"], "types": ["What are propTypes?"], "warning": ["What are propTypes?"], "raised": ["What are propTypes?"], "purecomponent": ["What is the difference between Component and PureComponent?"], "implements": ["What is the difference between Component and PureComponent?"], "shouldcomponentupdate": ["What is the difference between Component and PureComponent?"], "shallow": ["What is the difference between Component and PureComponent?"], "growth": ["What is Big O Notation?"], "regards": ["What is Big O Notation?"], "approach": ["What is Big O Notation?"], "infinity": ["What is Big O Notation?"], "invocation": ["What is the call stack?"], "stacks": ["What is a stack? Where and how are they used?", "What is the call stack?"], "lifo": ["What is a stack? Where and how are they used?", "What is the call stack?"], "popped": ["What is the call stack?"], "regard": ["What is the difference between time and space complexity?"], "concerned": ["What is the difference between time and space complexity?"], "allocation": ["What is the difference between time and space complexity?"], "advantages/disadvantages": ["What are some advantages/disadvantages to using Linked Lists versus arrays?"], "linked": ["What are some advantages/disadvantages to using Linked Lists versus arrays?", "What are linked lists used for?"], "versus": ["What are some advantages/disadvantages to using Linked Lists versus arrays?"], "insertion": ["What are some advantages/disadvantages to using Linked Lists versus arrays?"], "removal": ["What are some advantages/disadvantages to using Linked Lists versus arrays?"], "n": ["What are some advantages/disadvantages to using Linked Lists versus arrays?"], "indexed": ["What are some advantages/disadvantages to using Linked Lists versus arrays?"], "lookup/access": ["What are some advantages/disadvantages to using Linked Lists versus arrays?"], "graph": ["What are graphs used for?", "What is the difference between a tree and a graph?", "What is an adjacency list?"], "trees": ["What are trees used for?", "What is the difference between a tree and a graph?"], "particular": ["What is the difference between a tree and a graph?"], "kind": ["What is the difference between a tree and a graph?"], "never": ["What is the difference between a tree and a graph?"], "hierarchical": ["What is the difference between a tree and a graph?"], "structures": ["What is a queue? Where and how are they used?", "What is a stack? Where and how are they used?", "What is the difference between a tree and a graph?", "What are linked lists used for?"], "root": ["What is the difference between a tree and a graph?"], "nodes": ["What is the difference between a binary search tree and binary tree?", "What is the difference between a tree and a graph?", "What is an adjacency list?"], "graphs": ["What are graphs used for?", "What is the difference between a tree and a graph?"], "flexible": ["What is the difference between a tree and a graph?"], "direction": ["What is the difference between a tree and a graph?"], "weight": ["What is the difference between a tree and a graph?"], "binary": ["What is the difference between a binary search tree and binary tree?"], "search": ["What is the difference between a binary search tree and binary tree?"], "bst": ["What is the difference between a binary search tree and binary tree?"], "greater": ["What is a heap? What are they good for?", "What is the difference between a binary search tree and binary tree?"], "from": ["What are graphs used for?"], "modeling": ["What are graphs used for?"], "databases": ["What are graphs used for?"], "social": ["What are graphs used for?"], "networks": ["What are graphs used for?"], "company": ["What are trees used for?"], "inserting/removing": ["What are linked lists used for?"], "sophisticated": ["What are linked lists used for?"], "invocations": ["What is a stack? Where and how are they used?"], "history": ["What is a stack? Where and how are they used?"], "undo/redo": ["What is a stack? Where and how are they used?"], "calculator": ["What is a stack? Where and how are they used?"], "queue": ["What is a queue? Where and how are they used?"], "queues": ["What is a queue? Where and how are they used?", "What is a heap? What are they good for?"], "fifo": ["What is a queue? Where and how are they used?"], "printing/jobs": ["What is a queue? Where and how are they used?"], "adjacency": ["What is an adjacency list?"], "represent": ["What is an adjacency list?"], "lists/sets": ["What is an adjacency list?"], "explain": ["Explain how hash tables work"], "similarly": ["Explain how hash tables work"], "length": ["Explain how hash tables work"], "added": ["Explain how hash tables work"], "finds": ["Explain how hash tables work"], "place/index": ["Explain how hash tables work"], "minimize": ["Explain how hash tables work"], "collisions": ["Explain how hash tables work"], "spot": ["Explain how hash tables work", "What happens if two values hash to the same index?"], "consist": ["Explain how hash tables work"], "collision": ["What happens if two values hash to the same index?"], "managed": ["What happens if two values hash to the same index?"], "separate": ["What happens if two values hash to the same index?"], "chaining": ["What happens if two values hash to the same index?"], "linear": ["What happens if two values hash to the same index?"], "probing": ["What happens if two values hash to the same index?"], "finding": ["What happens if two values hash to the same index?"], "techniques": ["What happens if two values hash to the same index?"], "heap": ["What is a heap? What are they good for?"], "heaps": ["What is a heap? What are they good for?"], "bsts": ["What is a heap? What are they good for?"], "rigid": ["What is a heap? What are they good for?"], "restrictions": ["What is a heap? What are they good for?"], "regarding": ["What is a heap? What are they good for?"], "max": ["What is a heap? What are they good for?"], "parents": ["What is a heap? What are they good for?"], "vise": ["What is a heap? What are they good for?"], "versa": ["What is a heap? What are they good for?"], "min": ["What is a heap? What are they good for?"], "excellent": ["What is a heap? What are they good for?"], "caching": ["What is a heap? What are they good for?"], "priority": ["What is a heap? What are they good for?"]}